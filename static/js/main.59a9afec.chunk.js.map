{"version":3,"sources":["teamSelectDropdown.js","charts/rankingsChart.js","teamPanel.js","charts/trendComparisonChart.js","charts/lineComparisonChart.js","charts/hitComparisonChart.js","charts/takeawayComparisonChart.js","utils/colorUtil.js","utils/apiUtil.js","App.js","serviceWorker.js","index.js"],"names":["TeamSelectDropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDropdown","setState","dropdownOpen","state","getDropdownTitle","selectedTeam","label","teams","name","value","generateOptions","keys","map","teamKey","_this2","react_default","a","createElement","react_select_esm","className","onChange","_ref","selectTeam","panel","options","Component","RankingsChart","rankingsValue","_this$props","data","colors","rankingValue","es","yType","margin","left","width","height","xDomain","color","primaryColor","onValueMouseOver","v","onSeriesMouseOut","y","TeamPanel","getTeamTitle","renderTeamRecord","teamStats","recordValue","wins","stats","stat","losses","otLosses","ot","gamesPlayed","innerRadius","radius","colorType","angle","secondaryColor","tertiaryColor","renderTeamPoints","concat","pts","getRankingsSuffix","rank","includes","remainder","getRankingsData","_teamStats$rankings$s","rankings","goalsPerGame","goalsAgainstPerGame","powerPlayPercentage","penaltyKillPercentage","faceOffWinPercentage","goalsPerRank","parseInt","goalsAgainstRank","ppRank","pkRank","faceOffRank","push","x","renderRankingsChart","_this$props2","rankingsChart","renderTeamStats","_this$props3","style","justifyContent","teamSelectDropdown","TrendComparisonChart","formatData","statKey","teamPanel1Data","teamPanel2Data","dataTeamOne","lastFive","game","index","dataTeamTwo","getUpperBound","reduce","maxValue","Math","max","renderHint","tooltipValue","renderLineMarkSeries","strokeWidth","lineStyle","stroke","markStyle","fill","teamColors","teamOneColor","teamTwoColor","_this$formatData","toConsumableArray","yDomain","ShotComparisonChart","trendComparisonChart","HitComparisonChart","TakeawayComparisonChart","getTeamColors","fourthColor","thirdColor","axios","require","fetchPreviousFiveGames","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","teamId","endDate","startDate","previousGamesUrl","schedule","lastFiveGameIds","gameDataPromises","lastFiveGames","wrap","_context2","prev","next","moment","subtract","format","get","sent","dates","slice","games","gamePk","gameId","Promise","all","abrupt","gameData","away","team","id","teamSkaterStats","home","stop","_x2","apply","arguments","App","_callee","panelNumber","response","_context","splits","defineProperty","t0","_x","_this$state","marginBottom","backgroundImage","backgroundSize","teamPanel","lineComparisonChart","hitComparisonChart","takeawayComparisonChart","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59a9afec.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport teams from './constants/teams'\nimport Select from 'react-select'\n\nclass TeamSelectDropdown extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      dropdownOpen: false\n    }\n  }\n\n  toggleDropdown = () => this.setState({ dropdownOpen: !this.state.dropdownOpen })\n\n  getDropdownTitle = () => this.props.selectedTeam && \n    ({ label: teams[this.props.selectedTeam].name, value: this.props.selectedTeam })\n\n  generateOptions = () => Object.keys(teams).map(teamKey => ({\n    label: teams[teamKey].name,\n    value: teamKey\n  }))\n\n  render() {\n    return (\n      <Select\n        className='team-select-dropdown'\n        value={ this.getDropdownTitle() }\n        onChange={ ({ value }) => this.props.selectTeam(value, this.props.panel) }\n        options={ this.generateOptions() } />\n    )\n  }\n}\n\nexport default TeamSelectDropdown","import React, { Component } from 'react';\nimport '../App.css';\n\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  HorizontalBarSeries,\n  Hint\n} from 'react-vis'\n\nclass RankingsChart extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { rankingsValue: false }\n  }\n\n  render () {\n    const { data, colors } = this.props\n    const { rankingValue } = this.state\n\n    return (\n      <XYPlot\n        yType=\"ordinal\"\n        margin={{ left: 100 }}\n        width={ 550 }\n        height={ 250 }\n        xDomain={ [0, 32] }\n        color={ colors.primaryColor }>\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <HorizontalBarSeries\n          onValueMouseOver={ v => this.setState({ rankingValue: v })}\n          onSeriesMouseOut={ () => this.setState({ rankingValue: false })}\n          data={ data } />\n        { rankingValue &&\n          <Hint value={ rankingValue }>\n            <div className='radial-chart-tooltip'>\n              <div className='radial-chart-tooltip-name'>{ rankingValue.y }</div>\n              <div className='radial-chart-tooltip-value'>{ rankingValue.label }</div>\n            </div>\n          </Hint>\n        }\n      </XYPlot>\n    )\n  }\n}\n\nexport default RankingsChart","import React, { Component } from 'react';\nimport { RadialChart, Hint } from 'react-vis'\nimport './App.css';\n\nimport teams from './constants/teams'\nimport TeamSelectDropdown from './teamSelectDropdown'\nimport RankingsChart from './charts/rankingsChart';\n\nclass TeamPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { recordValue: false }\n  }\n\n  getTeamTitle = () => this.props.selectedTeam ?\n    teams[this.props.selectedTeam].name : 'Select a team'\n\n  renderTeamRecord = () => {\n    const { teamStats, colors } = this.props\n    const { recordValue } = this.state\n\n    const wins = teamStats.stats.stat.wins\n    const losses = teamStats.stats.stat.losses\n    const otLosses = teamStats.stats.stat.ot\n    const gamesPlayed = teamStats.stats.stat.gamesPlayed\n\n    return (\n      <div>\n        <div className='record-text-in-chart'>{ wins }-{ losses }-{ otLosses }</div>\n        <RadialChart\n          innerRadius={ 65 }\n          radius={ 95 }\n          colorType=\"literal\"\n          onValueMouseOver={ v => this.setState({ recordValue: v })}\n          onSeriesMouseOut={ () => this.setState({ recordValue: false })}\n          data={[\n            { angle: wins / gamesPlayed * 360, color: colors.primaryColor, label: { name: 'Wins', value: wins } },\n            { angle: losses / gamesPlayed * 360, color: colors.secondaryColor, label: { name: 'Losses', value: losses } },\n            { angle: otLosses / gamesPlayed * 360, color: colors.tertiaryColor, label: { name: 'OT Losses', value: otLosses } }\n          ]}\n          width={ 200 }\n          height={ 200 }>\n          { recordValue &&\n            <Hint value={ recordValue }>\n              <div className='radial-chart-tooltip'>\n                <div className='radial-chart-tooltip-name'>{ recordValue.label.name }</div>\n                <div className='radial-chart-tooltip-value'>{ recordValue.label.value }</div>\n              </div>\n            </Hint>\n          }\n          </RadialChart>\n      </div>\n    )\n  }\n\n  renderTeamPoints = () => (\n    <div className='points-text'>\n      {`${this.props.teamStats.stats.stat.pts} pts`}\n    </div>\n  )\n\n  getRankingsSuffix = (rank) => {\n    if ([11, 12, 13].includes(rank)) {\n      return 'th'\n    } \n    \n    const remainder = rank % 10\n    if (remainder === 1) {\n      return 'st'\n    } else if (remainder === 2) {\n      return 'nd'\n    } else if (remainder === 3) {\n      return 'rd'\n    } else {\n      return 'th'\n    }\n  }\n\n  getRankingsData = (teamStats) => {\n    const {\n      goalsPerGame,\n      goalsAgainstPerGame,\n      powerPlayPercentage,\n      penaltyKillPercentage,\n      faceOffWinPercentage\n    } = teamStats.rankings.stat\n\n    const goalsPerRank = 31 - parseInt(goalsPerGame)\n    const goalsAgainstRank = 31 - parseInt(goalsAgainstPerGame)\n    const ppRank = 31 - parseInt(powerPlayPercentage)\n    const pkRank = 31 - parseInt(penaltyKillPercentage)\n    const faceOffRank = 31 - parseInt(faceOffWinPercentage)\n\n    const data = []\n    data.push({\n      x: goalsPerRank,\n      y: 'Goals For',\n      label: `${ goalsPerRank }${ this.getRankingsSuffix(goalsPerRank) }`\n    })\n    data.push({\n      x: goalsAgainstRank,\n      y: 'Goals Against',\n      label: `${ goalsAgainstRank }${ this.getRankingsSuffix(goalsAgainstRank) }`\n    })\n    data.push({\n      x: ppRank,\n      y: 'Power Play',\n      label: `${ ppRank }${ this.getRankingsSuffix(ppRank) }`\n    })\n    data.push({\n      x: pkRank,\n      y: 'Penalty Kill',\n      label: `${ pkRank }${ this.getRankingsSuffix(pkRank) }`\n    })\n    data.push({\n      x: faceOffRank,\n      y: 'Face Off %',\n      label: `${ faceOffRank }${ this.getRankingsSuffix(faceOffRank) }`\n    })\n\n    return data\n  }\n\n  renderRankingsChart = () => {\n    const { teamStats, colors } = this.props\n\n    return (\n      <RankingsChart\n        data={ this.getRankingsData(teamStats) }\n        colors={ colors }/>\n    )\n  }\n\n  renderTeamStats = () => {\n    const { selectedTeam } = this.props\n\n    if (!selectedTeam) {\n      return (\n      <div className='no-team-selected-panel'>.</div>\n      )\n    }\n\n    return (\n      <div>\n        <div className='stat-container split-view-stats'>\n          <div className='split-view-stat'>\n            <div className='stat-header'><h5>Points</h5></div>\n            <div className='record-text'>\n              { this.renderTeamPoints() }\n            </div>\n          </div>\n          <div className='split-view-stat'>\n            <div className='stat-header'><h5>Record</h5></div>\n            <div className='record-text'>\n              { this.renderTeamRecord() }\n            </div>\n          </div>\n        </div>\n        <div className='stat-container'>\n            <h5>Rankings</h5>\n            { this.renderRankingsChart() }\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { panel, selectTeam, selectedTeam } = this.props\n    return (\n      <div className='team-container'\n        style={{ justifyContent: panel === 1 ? 'flex-end' : 'flex-start' }}>\n        <div className='team-content-container'>\n          <div className='team-header'>\n            <h3>{ this.getTeamTitle() }</h3>\n            <TeamSelectDropdown\n                panel={ panel }\n                selectedTeam={ selectedTeam }\n                selectTeam={ selectTeam } />\n          </div>\n          { this.renderTeamStats() }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TeamPanel","import React, { Component } from 'react';\nimport '../App.css';\n\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  LineMarkSeries,\n  Hint\n} from 'react-vis'\n\nclass TrendComparisonChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { tooltipValue: false }\n  }\n\n  formatData = () => {\n    const { statKey, teamPanel1Data, teamPanel2Data } = this.props\n    const dataTeamOne = teamPanel1Data.lastFive.map((game, index) => ({\n      x: index + 1,\n      y: game[statKey]\n    }))\n\n    const dataTeamTwo = teamPanel2Data.lastFive.map((game, index) => ({\n      x: index + 1,\n      y: game[statKey]\n    }))\n\n    return { dataTeamOne, dataTeamTwo }\n  }\n\n  getUpperBound = (data) => data\n    .reduce((maxValue, game) => Math.max(game.y, maxValue), 0)\n\n  renderHint = () => {\n    const { name } = this.props\n    const { tooltipValue } = this.state\n\n    return tooltipValue &&\n      <Hint value={ tooltipValue }>\n        <div className='radial-chart-tooltip'>\n          <div className='radial-chart-tooltip-name'>{ name }</div>\n          <div className='radial-chart-tooltip-value'>{ tooltipValue.y }</div>\n        </div>\n      </Hint>\n  }\n\n  renderLineMarkSeries = (data, color) => (\n    <LineMarkSeries\n      className=\"linemark-series-example\" \n      style={{ strokeWidth: '3px' }}\n      lineStyle={{ stroke: color }}\n      markStyle={{ stroke: color, fill: color }}\n      onValueMouseOver={ v => this.setState({ tooltipValue: v })}\n      onSeriesMouseOut={ () => this.setState({ tooltipValue: false })}\n      data={ data }\n    />\n  )\n\n  render() {\n    const { name, teamColors } = this.props\n    const { teamOneColor, teamTwoColor } = teamColors\n    const { dataTeamOne, dataTeamTwo } = this.formatData()\n    const maxValue = this.getUpperBound([...dataTeamOne, ...dataTeamTwo])\n\n    return (\n      <div className='comparison-stat-container'>\n        <h5>{ name }</h5>\n        <FlexibleWidthXYPlot\n          yDomain={ [0, maxValue + 5] }\n          height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          { this.renderLineMarkSeries(dataTeamOne, teamOneColor) }\n          { this.renderLineMarkSeries(dataTeamTwo, teamTwoColor) }\n          { this.renderHint() }\n        </FlexibleWidthXYPlot>\n      </div>\n    )\n  }\n}\n\nexport default TrendComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass ShotComparisonChart extends Component {\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Shots' }\n        statKey={ 'shots' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default ShotComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass HitComparisonChart extends Component {\n\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Hits' }\n        statKey={ 'hits' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default HitComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass TakeawayComparisonChart extends Component {\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Takeaways' }\n        statKey={ 'takeaways' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default TakeawayComparisonChart","import teams from '../constants/teams'\n\nexport const getTeamColors = (teamKey) => {\n  const colors = {\n    primaryColor: '#000',\n    secondaryColor: '#000',\n    tertiaryColor: '#000',\n    fourthColor: '#000'\n  }\n\n  if (teamKey) {\n    colors.primaryColor = teams[teamKey].primaryColor\n    colors.secondaryColor = teams[teamKey].secondaryColor || '#000'\n    colors.tertiaryColor = teams[teamKey].thirdColor || '#000'\n  }\n\n  return colors\n}","import moment from 'moment'\nconst axios = require('axios')\n\nexport const fetchTeamStats = async (teamId) => {\n  const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n  return response.data.teams[0].teamStats[0].splits\n}\n\nexport const fetchPreviousFiveGames = async (teamId) => {\n  const endDate = moment().subtract(1, 'days').format('YYYY-MM-DD')\n  const startDate = moment().subtract(1, 'months').format('YYYY-MM-DD')\n  const previousGamesUrl = `https://statsapi.web.nhl.com/api/v1/schedule?teamId=${teamId}&startDate=${startDate}&endDate=${endDate}`\n  const schedule  = await axios.get(previousGamesUrl)\n  const lastFiveGameIds = schedule.data.dates.slice(-5).map(game => game.games[0].gamePk)\n  const gameDataPromises = lastFiveGameIds.map(gameId => axios.get(`https://statsapi.web.nhl.com/api/v1/game/${gameId}/boxscore`))\n  const lastFiveGames = await Promise.all(gameDataPromises)\n  return lastFiveGames.map(gameData => {\n    const teams = gameData.data.teams\n    if (teams.away.team.id === teamId) {\n      return teams.away.teamStats.teamSkaterStats\n    }\n    return teams.home.teamStats.teamSkaterStats\n  })\n}","import React, { Component } from 'react'\nimport './App.css'\nimport TeamPanel from './teamPanel'\nimport ShotComparisonChart from './charts/lineComparisonChart'\nimport HitComparisonChart from './charts/hitComparisonChart'\nimport TakeawayComparisonChart from './charts/takeawayComparisonChart'\nimport teams from './constants/teams'\nimport { getTeamColors } from './utils/colorUtil'\nimport { fetchPreviousFiveGames } from './utils/apiUtil'\n\nconst axios = require('axios')\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      teamPanel1Data: {},\n      teamPanel2Data: {}\n    }\n  }\n\n  selectTeam = async (teamKey, panelNumber) => {\n    try {\n      const teamId = teams[teamKey].id\n      const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n      const stats = response.data.teams[0].teamStats[0].splits\n      const lastFive = await fetchPreviousFiveGames(teamId)\n      this.setState({\n        [`teamPanel${panelNumber}Data`]: {\n          selectedTeam: teamKey,\n          colors: getTeamColors(teamKey),\n          teamStats: {\n            stats: stats[0],\n            rankings: stats[1]\n          },\n          lastFive\n        } \n      })\n    } catch (error) {\n      this.setState({\n        [`teamPanel${panelNumber}Data`]: {\n          selectedTeam: null,\n          colors: {},\n          teamStats: null,\n          lastFive: []\n        } \n      })\n    }\n  }\n\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.state\n    const backgroundImagePath = 'https://samirjoshi.github.io/hockey-dashboard/background2.jpg'\n\n    return (\n      <div>\n        <div className=\"App\"style={{\n          marginBottom: 0,\n          backgroundImage: `url(${backgroundImagePath})`,\n          backgroundSize: 'cover'\n        }} >\n          { !(teamPanel1Data.selectedTeam || teamPanel2Data.selectedTeam) &&\n            <div className='welcome-header-container'>\n              <div className='welcome-header'>\n                <h1>HOCKEY DASHBOARDS</h1>\n                <p>Choose two teams to see how they compare. Show that your team is going to win!</p>\n              </div>\n            </div>\n          }\n          <div className='team-comparison'>\n            <TeamPanel\n              panel={ 1 }\n              selectTeam={ this.selectTeam }\n              selectedTeam={ teamPanel1Data.selectedTeam }\n              colors={ teamPanel1Data.colors }\n              lastFive={ teamPanel1Data.lastFive }\n              teamStats={ teamPanel1Data.teamStats }/>\n            <TeamPanel\n              panel={ 2 }\n              selectTeam={ this.selectTeam }\n              selectedTeam={ teamPanel2Data.selectedTeam }\n              colors={ teamPanel2Data.colors }\n              lastFive={ teamPanel2Data.lastFive }\n              teamStats={ teamPanel2Data.teamStats }/>\n          </div>\n          { !!(teamPanel1Data.selectedTeam && teamPanel2Data.selectedTeam) &&\n            <div className='charts-and-trends-container'>\n              <ShotComparisonChart\n                teamPanel1Data={ teamPanel1Data }\n                teamPanel2Data={ teamPanel2Data } />\n              <HitComparisonChart\n                teamPanel1Data={ teamPanel1Data }\n                teamPanel2Data={ teamPanel2Data } />\n              <TakeawayComparisonChart\n                teamPanel1Data={ teamPanel1Data }\n                teamPanel2Data={ teamPanel2Data } />\n            </div>\n          }\n        </div>  \n        <div className='credits-and-info-container'>\n          Credits to the NHL and their stats API for the data used to construct the dashboards. Made with <span role='img' aria-label='shark'>🦈</span> by it me sj.\n        </div>  \n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/react-vis/dist/style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}