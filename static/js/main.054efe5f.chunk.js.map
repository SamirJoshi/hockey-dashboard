{"version":3,"sources":["teamSelectDropdown.js","utils/formattingUtil.js","charts/rankingsChart.js","teamPanel.js","utils/colorUtil.js","utils/apiUtil.js","teamDashboard.js","charts/trendComparisonChart.js","charts/lineComparisonChart.js","charts/hitComparisonChart.js","charts/takeawayComparisonChart.js","comparisonDashboard.js","App.js","serviceWorker.js","index.js"],"names":["TeamSelectDropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDropdown","setState","dropdownOpen","state","getDropdownTitle","selectedTeam","label","teams","name","value","generateOptions","keys","map","teamKey","_this2","react_default","a","createElement","react_select_esm","className","onChange","_ref","selectTeam","panel","options","Component","getRankingsSuffix","rank","includes","remainder","RankingsChart","getRankingsData","_this$props$data","data","goalsPerGame","goalsAgainstPerGame","powerPlayPercentage","penaltyKillPercentage","faceOffWinPercentage","goalsPerRank","parseInt","goalsAgainstRank","ppRank","pkRank","faceOffRank","push","x","y","concat","rankingsValue","colors","rankingValue","formattedData","es","yType","margin","left","height","xDomain","color","primaryColor","tickFormat","v","onValueMouseOver","onSeriesMouseOut","TeamPanel","getTeamTitle","renderTeamRecord","_this$props","teamStats","recordValue","wins","stats","stat","losses","otLosses","ot","gamesPlayed","innerRadius","radius","colorType","angle","secondaryColor","tertiaryColor","width","renderTeamPoints","pts","renderRankingsChart","_this$props2","rankingsChart","rankings","renderTeamStats","_this$props3","style","justifyContent","react_router_dom","to","teamSelectDropdown","getTeamColors","fourthColor","thirdColor","axios","require","fetchPreviousFiveGames","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","teamId","endDate","startDate","previousGamesUrl","schedule","lastFiveGameIds","gameDataPromises","lastFiveGames","wrap","_context2","prev","next","moment","subtract","format","get","sent","dates","slice","game","games","gamePk","gameId","Promise","all","abrupt","gameData","away","team","id","teamSkaterStats","home","stop","_x2","apply","arguments","queryString","Spinner","TeamDashboard","selectTeamFromSearch","_callee","parsedSearch","searchKeys","teamKeys","_context","isLoading","_x","response","teamResponse","lastFive","splits","teamData","venue","city","division","conference","firstYear","firstYearOfPlay","t0","renderLoadingHeader","fadeIn","generateBlurb","_this$state$teamData","blurb","renderTeamHeader","_this$state$teamData2","backgroundColor","renderComparisonStat","statKey","teamColors","teamOneColor","teamTwoColor","trendComparisonChart","teamPanel1Data","teamPanel2Data","isTeam","_this$state$teamData3","renderTeamDashboard","location","parse","search","prevProps","_this$state","marginBottom","backgroundImage","backgroundSize","lastFiveAxisLabels","TrendComparisonChart","formatData","dataTeamOne","index","dataTeamTwo","getUpperBound","reduce","maxValue","Math","max","renderHint","tooltipValue","renderLineMarkSeries","strokeWidth","lineStyle","stroke","markStyle","fill","_this$formatData","toConsumableArray","yDomain","right","bottom","tickLabelAngle","tickValues","ShotComparisonChart","HitComparisonChart","TakeawayComparisonChart","ComparisonDashboard","selectTeamsFromSearch","selectTeamPromises","team1","team2","panelNumber","defineProperty","_x3","renderChartsAndTrends","lineComparisonChart","hitComparisonChart","takeawayComparisonChart","renderWelcomeHeader","comparisonDashboard_Spinner","_this$state2","teamPanel","App","react_router","path","component","from","role","aria-label","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.054efe5f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport teams from './constants/teams'\nimport Select from 'react-select'\n\nclass TeamSelectDropdown extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      dropdownOpen: false\n    }\n  }\n\n  toggleDropdown = () => this.setState({ dropdownOpen: !this.state.dropdownOpen })\n\n  getDropdownTitle = () => this.props.selectedTeam && \n    ({ label: teams[this.props.selectedTeam].name, value: this.props.selectedTeam })\n\n  generateOptions = () => Object.keys(teams).map(teamKey => ({\n    label: teams[teamKey].name,\n    value: teamKey\n  }))\n\n  render() {\n    return (\n      <Select\n        className='team-select-dropdown'\n        value={ this.getDropdownTitle() }\n        onChange={ ({ value }) => this.props.selectTeam(value, this.props.panel) }\n        options={ this.generateOptions() } />\n    )\n  }\n}\n\nexport default TeamSelectDropdown","export const getRankingsSuffix = (rank) => {\n  if ([11, 12, 13].includes(rank)) {\n    return 'th'\n  } \n  \n  const remainder = rank % 10\n  if (remainder === 1) {\n    return 'st'\n  } else if (remainder === 2) {\n    return 'nd'\n  } else if (remainder === 3) {\n    return 'rd'\n  } else {\n    return 'th'\n  }\n}","import React, { Component } from 'react';\nimport '../App.css';\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  HorizontalBarSeries,\n  Hint\n} from 'react-vis'\nimport { getRankingsSuffix } from '../utils/formattingUtil';\n\nclass RankingsChart extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { rankingsValue: false }\n  }\n\n  getRankingsData = () => {\n    const {\n      goalsPerGame,\n      goalsAgainstPerGame,\n      powerPlayPercentage,\n      penaltyKillPercentage,\n      faceOffWinPercentage\n    } = this.props.data\n\n    const goalsPerRank = parseInt(goalsPerGame)\n    const goalsAgainstRank = parseInt(goalsAgainstPerGame)\n    const ppRank = parseInt(powerPlayPercentage)\n    const pkRank = parseInt(penaltyKillPercentage)\n    const faceOffRank = parseInt(faceOffWinPercentage)\n\n    const data = []\n    data.push({\n      x: 31 - goalsPerRank,\n      y: 'Goals For',\n      label: `${ goalsPerRank }${ getRankingsSuffix(goalsPerRank) }`\n    })\n    data.push({\n      x: 31 - goalsAgainstRank,\n      y: 'Goals Against',\n      label: `${ goalsAgainstRank }${ getRankingsSuffix(goalsAgainstRank) }`\n    })\n    data.push({\n      x: 31 - ppRank,\n      y: 'Power Play',\n      label: `${ ppRank }${ getRankingsSuffix(ppRank) }`\n    })\n    data.push({\n      x: 31 - pkRank,\n      y: 'Penalty Kill',\n      label: `${ pkRank }${ getRankingsSuffix(pkRank) }`\n    })\n    data.push({\n      x: 31 - faceOffRank,\n      y: 'Face Off %',\n      label: `${ faceOffRank }${ getRankingsSuffix(faceOffRank) }`\n    })\n\n    return data\n  }\n\n  render () {\n    const { colors } = this.props\n    const { rankingValue } = this.state\n    const formattedData = this.getRankingsData()\n\n    return (\n      <FlexibleWidthXYPlot\n        yType=\"ordinal\"\n        margin={{ left: 100 }}\n        height={ 250 }\n        xDomain={ [0, 32] }\n        color={ colors.primaryColor }>\n        <HorizontalGridLines />\n        <XAxis tickFormat={v => `${ 31 - v }${ getRankingsSuffix(31 - v) }`}/>\n        <YAxis />\n        <HorizontalBarSeries\n          onValueMouseOver={ v => this.setState({ rankingValue: v })}\n          onSeriesMouseOut={ () => this.setState({ rankingValue: false })}\n          data={ formattedData } />\n        { rankingValue &&\n          <Hint value={ rankingValue }>\n            <div className='radial-chart-tooltip'>\n              <div className='radial-chart-tooltip-name'>{ rankingValue.y }</div>\n              <div className='radial-chart-tooltip-value'>{ rankingValue.label }</div>\n            </div>\n          </Hint>\n        }\n      </FlexibleWidthXYPlot>\n    )\n  }\n}\n\nexport default RankingsChart","import React, { Component } from 'react';\nimport { RadialChart, Hint } from 'react-vis'\nimport './App.css';\nimport { Link } from 'react-router-dom'\n\nimport teams from './constants/teams'\nimport TeamSelectDropdown from './teamSelectDropdown'\nimport RankingsChart from './charts/rankingsChart';\n\nclass TeamPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { recordValue: false }\n  }\n\n  getTeamTitle = () => this.props.selectedTeam ?\n    teams[this.props.selectedTeam].name : 'Select a team'\n\n  renderTeamRecord = () => {\n    const { teamStats, colors } = this.props\n    const { recordValue } = this.state\n\n    const wins = teamStats.stats.stat.wins\n    const losses = teamStats.stats.stat.losses\n    const otLosses = teamStats.stats.stat.ot\n    const gamesPlayed = teamStats.stats.stat.gamesPlayed\n\n    return (\n      <div>\n        <div className='record-text-in-chart'>{ wins }-{ losses }-{ otLosses }</div>\n        <RadialChart\n          innerRadius={ 65 }\n          radius={ 95 }\n          colorType=\"literal\"\n          onValueMouseOver={ v => this.setState({ recordValue: v })}\n          onSeriesMouseOut={ () => this.setState({ recordValue: false })}\n          data={[\n            { angle: wins / gamesPlayed * 360, color: colors.primaryColor, label: { name: 'Wins', value: wins } },\n            { angle: losses / gamesPlayed * 360, color: colors.secondaryColor, label: { name: 'Losses', value: losses } },\n            { angle: otLosses / gamesPlayed * 360, color: colors.tertiaryColor, label: { name: 'OT Losses', value: otLosses } }\n          ]}\n          width={ 200 }\n          height={ 200 }>\n          { recordValue &&\n            <Hint value={ recordValue }>\n              <div className='radial-chart-tooltip'>\n                <div className='radial-chart-tooltip-name'>{ recordValue.label.name }</div>\n                <div className='radial-chart-tooltip-value'>{ recordValue.label.value }</div>\n              </div>\n            </Hint>\n          }\n          </RadialChart>\n      </div>\n    )\n  }\n\n  renderTeamPoints = () => (\n    <div className='points-text'>\n      {`${this.props.teamStats.stats.stat.pts} pts`}\n    </div>\n  )\n\n  renderRankingsChart = () => {\n    const { teamStats, colors } = this.props\n\n    return (\n      <RankingsChart\n        data={ teamStats.rankings.stat }\n        colors={ colors }/>\n    )\n  }\n\n  renderTeamStats = () => {\n    const { selectedTeam } = this.props\n\n    if (!selectedTeam) {\n      return (\n      <div className='no-team-selected-panel'>.</div>\n      )\n    }\n\n    return (\n      <div>\n        <div className='stat-container split-view-stats'>\n          <div className='split-view-stat'>\n            <div className='stat-header'><h5>Points</h5></div>\n            <div className='record-text'>\n              { this.renderTeamPoints() }\n            </div>\n          </div>\n          <div className='split-view-stat'>\n            <div className='stat-header'><h5>Record</h5></div>\n            <div className='record-text'>\n              { this.renderTeamRecord() }\n            </div>\n          </div>\n        </div>\n        <div className='stat-container'>\n            <h5>Rankings</h5>\n            { this.renderRankingsChart() }\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { panel, selectTeam, selectedTeam } = this.props\n    return (\n      <div className='team-container'\n        style={{ justifyContent: panel === 1 ? 'flex-end' : 'flex-start' }}>\n        <div className='team-content-container'>\n          <div className='team-header'>\n            <div className='team-title-container'>\n              <h3>{ this.getTeamTitle() }</h3>\n              { !!selectedTeam &&\n                <Link\n                  className='team-details-link'\n                  to={ `/team?team=${selectedTeam}` }>\n                  View Details\n                </Link>\n              }\n            </div>\n            <TeamSelectDropdown\n                panel={ panel }\n                selectedTeam={ selectedTeam }\n                selectTeam={ selectTeam } />\n          </div>\n          { this.renderTeamStats() }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TeamPanel","import teams from '../constants/teams'\n\nexport const getTeamColors = (teamKey) => {\n  const colors = {\n    primaryColor: '#000',\n    secondaryColor: '#000',\n    tertiaryColor: '#000',\n    fourthColor: '#000'\n  }\n\n  if (teamKey) {\n    colors.primaryColor = teams[teamKey].primaryColor\n    colors.secondaryColor = teams[teamKey].secondaryColor || '#000'\n    colors.tertiaryColor = teams[teamKey].thirdColor || '#000'\n  }\n\n  return colors\n}","import moment from 'moment'\nconst axios = require('axios')\n\nexport const fetchTeamStats = async (teamId) => {\n  const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n  return response.data.teams[0].teamStats[0].splits\n}\n\nexport const fetchPreviousFiveGames = async (teamId) => {\n  const endDate = moment().subtract(1, 'days').format('YYYY-MM-DD')\n  const startDate = moment().subtract(1, 'months').format('YYYY-MM-DD')\n  const previousGamesUrl = `https://statsapi.web.nhl.com/api/v1/schedule?teamId=${teamId}&startDate=${startDate}&endDate=${endDate}`\n  const schedule  = await axios.get(previousGamesUrl)\n  const lastFiveGameIds = schedule.data.dates.slice(-5).map(game => game.games[0].gamePk)\n  const gameDataPromises = lastFiveGameIds.map(gameId => axios.get(`https://statsapi.web.nhl.com/api/v1/game/${gameId}/boxscore`))\n  const lastFiveGames = await Promise.all(gameDataPromises)\n  return lastFiveGames.map(gameData => {\n    const teams = gameData.data.teams\n    if (teams.away.team.id === teamId) {\n      return teams.away.teamStats.teamSkaterStats\n    }\n    return teams.home.teamStats.teamSkaterStats\n  })\n}","import React, { Component } from 'react'\nimport './teamDashboard.css'\nimport teams from './constants/teams'\nimport { getTeamColors } from './utils/colorUtil'\nimport { fetchPreviousFiveGames } from './utils/apiUtil'\nimport TrendComparisonChart from './charts/trendComparisonChart';\nimport RankingsChart from './charts/rankingsChart';\n\nconst axios = require('axios')\nconst queryString = require('query-string');\nconst Spinner = require('react-spinkit');\n\nclass TeamDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      teamData: null,\n      isLoading: false\n    }\n  }\n\n  async componentDidMount() {\n    const { location } = this.props\n    const parsedSearch = queryString.parse(location.search)\n    this.selectTeamFromSearch(parsedSearch)\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { location } = this.props\n    if (location.search !== prevProps.location.search) {\n      const parsedSearch = queryString.parse(location.search)\n      await this.selectTeamFromSearch(parsedSearch)\n    }\n  }\n\n  selectTeamFromSearch = async (parsedSearch) => {\n    const searchKeys = Object.keys(parsedSearch)\n    const teamKeys = Object.keys(teams)\n\n    if (searchKeys.includes('team')){\n      this.setState({ isLoading: true })\n      if (teamKeys.includes(parsedSearch.team)) {\n        await this.selectTeam(parsedSearch.team)\n      }\n    }\n\n    this.setState({ isLoading: false })\n  }\n\n  selectTeam = async (teamKey) => {\n    try {\n      const teamId = teams[teamKey].id\n      const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n      const teamResponse = response.data.teams[0]\n      const stats = teamResponse.teamStats[0].splits\n      const lastFive = await fetchPreviousFiveGames(teamId)\n      this.setState({\n        teamData: {\n          selectedTeam: teamKey,\n          colors: getTeamColors(teamKey),\n          teamStats: {\n            stats: stats[0],\n            rankings: stats[1]\n          },\n          venue: teamResponse.venue.name,\n          city: teamResponse.venue.city,\n          division: teamResponse.division.name,\n          conference: teamResponse.conference.name,\n          firstYear: teamResponse.firstYearOfPlay,\n          lastFive\n        } \n      })\n    } catch (error) {\n      this.setState({ teamData: { selectedTeam: null } })\n    }\n  }\n\n  renderLoadingHeader = () => (\n    <div className='welcome-header-container'>\n      <div className='welcome-header'>\n        <h1>Loading ...</h1>\n        <Spinner\n          name='line-scale-pulse-out'\n          fadeIn='none' />\n      </div>\n    </div>\n  )\n\n  generateBlurb = () => {\n    const { selectedTeam, city, venue, firstYear } = this.state.teamData\n    const name = teams[selectedTeam].name\n\n    let blurb = `The ${name} have been playing since ${firstYear}. `\n    blurb += `They are located in ${city} and currently play in ${venue}.`\n\n    return blurb\n  }\n\n  renderTeamHeader = () => {\n    const { selectedTeam, division, conference } = this.state.teamData\n    return (\n      <div\n        className='team-info-pane-container'\n        style={{ backgroundColor: teams[selectedTeam].primaryColor }}>\n        <div className='team-info-pane'>\n          <div className='team-title'>\n            { teams[selectedTeam].name }\n          </div>\n          <div className='team-info-component'>\n            { this.generateBlurb() }\n          </div>\n          <div className='team-info-component'>\n            Division: { division }\n          </div>\n          <div className='team-info-component'>\n            Conference: { conference }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderComparisonStat = (name, statKey) => {\n    const { teamData } = this.state\n    const teamColors = {\n      teamOneColor: teamData.colors.primaryColor,\n      teamTwoColor: '#000000'\n    }\n\n    return (\n      <div className='comparison-chart-container'>\n        <TrendComparisonChart\n          name={ name }\n          statKey={ statKey}\n          teamPanel1Data={ teamData }\n          teamPanel2Data={ { lastFive: [] } }\n          teamColors={ teamColors }\n          isTeam />\n      </div>\n    )\n  }\n\n  renderRankingsChart = () => {\n    const { teamStats, colors } = this.state.teamData\n    return (\n      <div className='team-rankings'>\n        <h5>Rankings</h5>\n        <RankingsChart  \n          data={ teamStats.rankings.stat }\n          colors={ colors }/>\n      </div>\n    )\n  }\n\n  renderTeamDashboard = () => (\n    <div className='team-dashboard'>\n      { this.renderTeamHeader() }\n      { this.renderRankingsChart() }\n      { this.renderComparisonStat('Goals', 'goals') }\n      { this.renderComparisonStat('Shots', 'shots') }\n      { this.renderComparisonStat('Hits', 'hits') }\n      { this.renderComparisonStat('Takeaways', 'takeaways') }\n    </div>\n  )\n\n  render() {\n    const { isLoading, teamData } = this.state\n    const backgroundImagePath = 'https://samirjoshi.github.io/hockey-dashboard/background2.jpg'\n\n    return (\n      <div className=\"App\" style={{\n        marginBottom: 0,\n        backgroundImage: `url(${backgroundImagePath})`,\n        backgroundSize: 'cover'\n      }} >\n        { isLoading &&\n          this.renderLoadingHeader()\n        }\n        {\n          !!(teamData && teamData.selectedTeam) &&\n          this.renderTeamDashboard()\n        }\n      </div>  \n    )\n  }\n}\n\nexport default TeamDashboard\n","import React, { Component } from 'react';\nimport '../App.css';\nimport '../teamDashboard';\n\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  LineMarkSeries,\n  Hint\n} from 'react-vis'\n\nconst lastFiveAxisLabels = [\n  '5 Games Ago',\n  '4 Games Ago',\n  '3 Games Ago',\n  '2 Games Ago',\n  'Last Game'\n]\n\nclass TrendComparisonChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { tooltipValue: false }\n  }\n\n  formatData = () => {\n    const { statKey, teamPanel1Data, teamPanel2Data } = this.props\n    const dataTeamOne = teamPanel1Data.lastFive.map((game, index) => ({\n      x: index + 1,\n      y: game[statKey]\n    }))\n\n    const dataTeamTwo = teamPanel2Data.lastFive.map((game, index) => ({\n      x: index + 1,\n      y: game[statKey]\n    }))\n\n    return { dataTeamOne, dataTeamTwo }\n  }\n\n  getUpperBound = (data) => data\n    .reduce((maxValue, game) => Math.max(game.y, maxValue), 0)\n\n  renderHint = () => {\n    const { name } = this.props\n    const { tooltipValue } = this.state\n\n    return tooltipValue &&\n      <Hint value={ tooltipValue }>\n        <div className='radial-chart-tooltip'>\n          <div className='radial-chart-tooltip-name'>{ name }</div>\n          <div className='radial-chart-tooltip-value'>{ tooltipValue.y }</div>\n        </div>\n      </Hint>\n  }\n\n  renderLineMarkSeries = (data, color) => (\n    <LineMarkSeries\n      className=\"linemark-series-example\" \n      style={{ strokeWidth: '3px' }}\n      lineStyle={{ stroke: color }}\n      markStyle={{ stroke: color, fill: color }}\n      onValueMouseOver={ v => this.setState({ tooltipValue: v })}\n      onSeriesMouseOut={ () => this.setState({ tooltipValue: false })}\n      data={ data }\n    />\n  )\n\n  render() {\n    const { name, teamColors, isTeam } = this.props\n    const { teamOneColor, teamTwoColor } = teamColors\n    const { dataTeamOne, dataTeamTwo } = this.formatData()\n    const maxValue = this.getUpperBound([...dataTeamOne, ...dataTeamTwo])\n\n    return (\n      <div className={isTeam ? 'team-stat-container' : 'comparison-stat-container'}>\n        <h5>{ name }</h5>\n        <FlexibleWidthXYPlot\n          yDomain={ [0, maxValue + 5] }\n          margin={{ left: 55, right: 20, bottom: 70 }}\n          height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis\n            tickFormat={ v => lastFiveAxisLabels[v - 1] }\n            tickLabelAngle={ -45 }\n            tickValues={[1, 2, 3, 4, 5]} />\n          <YAxis />\n          { this.renderLineMarkSeries(dataTeamOne, teamOneColor) }\n          { this.renderLineMarkSeries(dataTeamTwo, teamTwoColor) }\n          { this.renderHint() }\n        </FlexibleWidthXYPlot>\n      </div>\n    )\n  }\n}\n\nexport default TrendComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass ShotComparisonChart extends Component {\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Shots' }\n        statKey={ 'shots' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default ShotComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass HitComparisonChart extends Component {\n\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Hits' }\n        statKey={ 'hits' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default HitComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass TakeawayComparisonChart extends Component {\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Takeaways' }\n        statKey={ 'takeaways' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default TakeawayComparisonChart","import React, { Component } from 'react'\nimport './App.css'\nimport TeamPanel from './teamPanel'\nimport ShotComparisonChart from './charts/lineComparisonChart'\nimport HitComparisonChart from './charts/hitComparisonChart'\nimport TakeawayComparisonChart from './charts/takeawayComparisonChart'\nimport teams from './constants/teams'\nimport { getTeamColors } from './utils/colorUtil'\nimport { fetchPreviousFiveGames } from './utils/apiUtil'\n\nconst axios = require('axios')\nconst queryString = require('query-string');\nconst Spinner = require('react-spinkit');\n\nclass ComparisonDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      teamPanel1Data: {},\n      teamPanel2Data: {},\n      isLoading: false\n    }\n  }\n\n  async componentDidMount() {\n    const { location } = this.props\n    const parsedSearch = queryString.parse(location.search)\n    this.selectTeamsFromSearch(parsedSearch)\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { location } = this.props\n    if (location.search !== prevProps.location.search) {\n      const parsedSearch = queryString.parse(location.search)\n      await this.selectTeamsFromSearch(parsedSearch)\n    }\n  }\n\n  selectTeamsFromSearch = async (parsedSearch) => {\n    const searchKeys = Object.keys(parsedSearch)\n    const teamKeys = Object.keys(teams)\n    const selectTeamPromises = []\n\n    if (searchKeys.includes('team1') || searchKeys.includes('team2')) {\n      this.setState({ isLoading: true })\n    }\n\n    if (searchKeys.includes('team1') && teamKeys.includes(parsedSearch.team1)) {\n      selectTeamPromises.push(this.selectTeam(parsedSearch.team1, 1))\n    }\n    if (searchKeys.includes('team2') && teamKeys.includes(parsedSearch.team2)) {\n      selectTeamPromises.push(this.selectTeam(parsedSearch.team2, 2))\n    }\n\n    await Promise.all(selectTeamPromises)\n    this.setState({ isLoading: false })\n  }\n\n  selectTeam = async (teamKey, panelNumber) => {\n    try {\n      const teamId = teams[teamKey].id\n      const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n      const stats = response.data.teams[0].teamStats[0].splits\n      const lastFive = await fetchPreviousFiveGames(teamId)\n      this.setState({\n        [`teamPanel${panelNumber}Data`]: {\n          selectedTeam: teamKey,\n          colors: getTeamColors(teamKey),\n          teamStats: {\n            stats: stats[0],\n            rankings: stats[1]\n          },\n          lastFive\n        } \n      })\n    } catch (error) {\n      this.setState({\n        [`teamPanel${panelNumber}Data`]: {\n          selectedTeam: null,\n          colors: {},\n          teamStats: null,\n          lastFive: []\n        } \n      })\n    }\n  }\n\n  renderChartsAndTrends = () => {\n    const { teamPanel1Data, teamPanel2Data } = this.state\n    return (\n      <div className='charts-and-trends-container'>\n        <ShotComparisonChart\n          teamPanel1Data={ teamPanel1Data }\n          teamPanel2Data={ teamPanel2Data } />\n        <HitComparisonChart\n          teamPanel1Data={ teamPanel1Data }\n          teamPanel2Data={ teamPanel2Data } />\n        <TakeawayComparisonChart\n          teamPanel1Data={ teamPanel1Data }\n          teamPanel2Data={ teamPanel2Data } />\n      </div>\n    )\n  }\n\n  renderWelcomeHeader = () => (\n    <div className='welcome-header-container'>\n      <div className='welcome-header'>\n        <h1>HOCKEY DASHBOARDS</h1>\n        <p>Choose two teams to see how they compare. Show that your team is going to win!</p>\n      </div>\n    </div>\n  )\n\n  renderLoadingHeader = () => (\n    <div className='welcome-header-container'>\n      <div className='welcome-header'>\n        <h1>Loading ...</h1>\n        <Spinner\n          name='line-scale-pulse-out'\n          fadeIn='none' />\n      </div>\n    </div>\n  )\n\n  render() {\n    const { isLoading, teamPanel1Data, teamPanel2Data } = this.state\n    const backgroundImagePath = 'https://samirjoshi.github.io/hockey-dashboard/background2.jpg'\n\n    return (\n      <div className=\"App\" style={{\n        marginBottom: 0,\n        backgroundImage: `url(${backgroundImagePath})`,\n        backgroundSize: 'cover'\n      }} >\n        { !isLoading && !(teamPanel1Data.selectedTeam || teamPanel2Data.selectedTeam) &&\n          this.renderWelcomeHeader()\n        }\n        {\n          isLoading &&\n          this.renderLoadingHeader()\n        }\n        <div className='team-comparison'>\n          <TeamPanel\n            panel={ 1 }\n            selectTeam={ this.selectTeam }\n            selectedTeam={ teamPanel1Data.selectedTeam }\n            colors={ teamPanel1Data.colors }\n            lastFive={ teamPanel1Data.lastFive }\n            teamStats={ teamPanel1Data.teamStats }/>\n          <TeamPanel\n            panel={ 2 }\n            selectTeam={ this.selectTeam }\n            selectedTeam={ teamPanel2Data.selectedTeam }\n            colors={ teamPanel2Data.colors }\n            lastFive={ teamPanel2Data.lastFive }\n            teamStats={ teamPanel2Data.teamStats }/>\n        </div>\n        { !!(teamPanel1Data.selectedTeam && teamPanel2Data.selectedTeam) &&\n          this.renderChartsAndTrends()\n        }\n      </div>  \n    )\n  }\n}\n\nexport default ComparisonDashboard\n","import React, { Component } from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport ComparisonDashboard from './comparisonDashboard'\nimport TeamDashboard from './teamDashboard'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path='/comparison' component={ ComparisonDashboard } />\n            <Route path='/team' component={ TeamDashboard } />\n            <Redirect from='/' to='/comparison' />\n          </Switch>\n        </Router>\n        <div className='credits-and-info-container'>\n          Credits to the NHL and their stats API for the data used to construct the dashboards.\n          Credits to https://teamcolorcodes.com/nhl-team-color-codes/ for collecting the team colors that were used on this site.\n          Made with <span role='img' aria-label='shark'>🦈</span> by it me sj.\n        </div>  \n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/react-vis/dist/style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}