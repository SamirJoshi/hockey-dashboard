{"version":3,"sources":["teamSelectDropdown.js","utils/formattingUtil.js","charts/rankingsChart.js","teamPanel.js","charts/trendComparisonChart.js","charts/lineComparisonChart.js","charts/hitComparisonChart.js","charts/takeawayComparisonChart.js","utils/colorUtil.js","utils/apiUtil.js","comparisonDashboard.js","teamDashboard.js","App.js","serviceWorker.js","index.js"],"names":["TeamSelectDropdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleDropdown","setState","dropdownOpen","state","getDropdownTitle","selectedTeam","label","teams","name","value","generateOptions","keys","map","teamKey","_this2","react_default","a","createElement","react_select_esm","className","onChange","_ref","selectTeam","panel","options","Component","getRankingsSuffix","rank","includes","remainder","RankingsChart","rankingsValue","_this$props","data","colors","rankingValue","es","yType","margin","left","height","xDomain","color","primaryColor","tickFormat","v","concat","onValueMouseOver","onSeriesMouseOut","y","TeamPanel","getTeamTitle","renderTeamRecord","teamStats","recordValue","wins","stats","stat","losses","otLosses","ot","gamesPlayed","innerRadius","radius","colorType","angle","secondaryColor","tertiaryColor","width","renderTeamPoints","pts","getRankingsData","_teamStats$rankings$s","rankings","goalsPerGame","goalsAgainstPerGame","powerPlayPercentage","penaltyKillPercentage","faceOffWinPercentage","goalsPerRank","parseInt","goalsAgainstRank","ppRank","pkRank","faceOffRank","push","x","renderRankingsChart","_this$props2","rankingsChart","renderTeamStats","_this$props3","style","justifyContent","teamSelectDropdown","TrendComparisonChart","formatData","statKey","teamPanel1Data","teamPanel2Data","dataTeamOne","lastFive","game","index","dataTeamTwo","getUpperBound","reduce","maxValue","Math","max","renderHint","tooltipValue","renderLineMarkSeries","strokeWidth","lineStyle","stroke","markStyle","fill","teamColors","teamOneColor","teamTwoColor","_this$formatData","toConsumableArray","yDomain","ShotComparisonChart","trendComparisonChart","HitComparisonChart","TakeawayComparisonChart","getTeamColors","fourthColor","thirdColor","axios","require","fetchPreviousFiveGames","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","teamId","endDate","startDate","previousGamesUrl","schedule","lastFiveGameIds","gameDataPromises","lastFiveGames","wrap","_context2","prev","next","moment","subtract","format","get","sent","dates","slice","games","gamePk","gameId","Promise","all","abrupt","gameData","away","team","id","teamSkaterStats","home","stop","_x2","apply","arguments","queryString","Spinner","ComparisonDashboard","selectTeamsFromSearch","_callee","parsedSearch","searchKeys","teamKeys","selectTeamPromises","_context","isLoading","team1","team2","_x","panelNumber","response","splits","defineProperty","t0","_x3","renderChartsAndTrends","_this$state","lineComparisonChart","hitComparisonChart","takeawayComparisonChart","renderWelcomeHeader","renderLoadingHeader","fadeIn","location","parse","search","prevProps","_this$state2","marginBottom","backgroundImage","backgroundSize","teamPanel","TeamDashboard","selectTeamFromSearch","teamResponse","teamData","venue","city","division","conference","firstYear","firstYearOfPlay","teamDashboard_Spinner","generateBlurb","_this$state$teamData","blurb","renderTeamHeader","_this$state$teamData2","backgroundColor","renderComparisonStat","renderTeamDashboard","console","log","App","react_router_dom","react_router","path","component","from","to","role","aria-label","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3822b58.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport teams from './constants/teams'\nimport Select from 'react-select'\n\nclass TeamSelectDropdown extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      dropdownOpen: false\n    }\n  }\n\n  toggleDropdown = () => this.setState({ dropdownOpen: !this.state.dropdownOpen })\n\n  getDropdownTitle = () => this.props.selectedTeam && \n    ({ label: teams[this.props.selectedTeam].name, value: this.props.selectedTeam })\n\n  generateOptions = () => Object.keys(teams).map(teamKey => ({\n    label: teams[teamKey].name,\n    value: teamKey\n  }))\n\n  render() {\n    return (\n      <Select\n        className='team-select-dropdown'\n        value={ this.getDropdownTitle() }\n        onChange={ ({ value }) => this.props.selectTeam(value, this.props.panel) }\n        options={ this.generateOptions() } />\n    )\n  }\n}\n\nexport default TeamSelectDropdown","export const getRankingsSuffix = (rank) => {\n  if ([11, 12, 13].includes(rank)) {\n    return 'th'\n  } \n  \n  const remainder = rank % 10\n  if (remainder === 1) {\n    return 'st'\n  } else if (remainder === 2) {\n    return 'nd'\n  } else if (remainder === 3) {\n    return 'rd'\n  } else {\n    return 'th'\n  }\n}","import React, { Component } from 'react';\nimport '../App.css';\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  HorizontalGridLines,\n  HorizontalBarSeries,\n  Hint\n} from 'react-vis'\nimport { getRankingsSuffix } from '../utils/formattingUtil';\n\nclass RankingsChart extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { rankingsValue: false }\n  }\n\n  render () {\n    const { data, colors } = this.props\n    const { rankingValue } = this.state\n\n    return (\n      <FlexibleWidthXYPlot\n        yType=\"ordinal\"\n        margin={{ left: 100 }}\n        height={ 250 }\n        xDomain={ [0, 32] }\n        color={ colors.primaryColor }>\n        <HorizontalGridLines />\n        <XAxis tickFormat={v => `${ 31 - v }${ getRankingsSuffix(31 - v) }`}/>\n        <YAxis />\n        <HorizontalBarSeries\n          onValueMouseOver={ v => this.setState({ rankingValue: v })}\n          onSeriesMouseOut={ () => this.setState({ rankingValue: false })}\n          data={ data } />\n        { rankingValue &&\n          <Hint value={ rankingValue }>\n            <div className='radial-chart-tooltip'>\n              <div className='radial-chart-tooltip-name'>{ rankingValue.y }</div>\n              <div className='radial-chart-tooltip-value'>{ rankingValue.label }</div>\n            </div>\n          </Hint>\n        }\n      </FlexibleWidthXYPlot>\n    )\n  }\n}\n\nexport default RankingsChart","import React, { Component } from 'react';\nimport { RadialChart, Hint } from 'react-vis'\nimport './App.css';\n\nimport teams from './constants/teams'\nimport TeamSelectDropdown from './teamSelectDropdown'\nimport RankingsChart from './charts/rankingsChart';\nimport { getRankingsSuffix } from './utils/formattingUtil';\n\nclass TeamPanel extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { recordValue: false }\n  }\n\n  getTeamTitle = () => this.props.selectedTeam ?\n    teams[this.props.selectedTeam].name : 'Select a team'\n\n  renderTeamRecord = () => {\n    const { teamStats, colors } = this.props\n    const { recordValue } = this.state\n\n    const wins = teamStats.stats.stat.wins\n    const losses = teamStats.stats.stat.losses\n    const otLosses = teamStats.stats.stat.ot\n    const gamesPlayed = teamStats.stats.stat.gamesPlayed\n\n    return (\n      <div>\n        <div className='record-text-in-chart'>{ wins }-{ losses }-{ otLosses }</div>\n        <RadialChart\n          innerRadius={ 65 }\n          radius={ 95 }\n          colorType=\"literal\"\n          onValueMouseOver={ v => this.setState({ recordValue: v })}\n          onSeriesMouseOut={ () => this.setState({ recordValue: false })}\n          data={[\n            { angle: wins / gamesPlayed * 360, color: colors.primaryColor, label: { name: 'Wins', value: wins } },\n            { angle: losses / gamesPlayed * 360, color: colors.secondaryColor, label: { name: 'Losses', value: losses } },\n            { angle: otLosses / gamesPlayed * 360, color: colors.tertiaryColor, label: { name: 'OT Losses', value: otLosses } }\n          ]}\n          width={ 200 }\n          height={ 200 }>\n          { recordValue &&\n            <Hint value={ recordValue }>\n              <div className='radial-chart-tooltip'>\n                <div className='radial-chart-tooltip-name'>{ recordValue.label.name }</div>\n                <div className='radial-chart-tooltip-value'>{ recordValue.label.value }</div>\n              </div>\n            </Hint>\n          }\n          </RadialChart>\n      </div>\n    )\n  }\n\n  renderTeamPoints = () => (\n    <div className='points-text'>\n      {`${this.props.teamStats.stats.stat.pts} pts`}\n    </div>\n  )\n\n  getRankingsData = (teamStats) => {\n    const {\n      goalsPerGame,\n      goalsAgainstPerGame,\n      powerPlayPercentage,\n      penaltyKillPercentage,\n      faceOffWinPercentage\n    } = teamStats.rankings.stat\n\n    const goalsPerRank = parseInt(goalsPerGame)\n    const goalsAgainstRank = parseInt(goalsAgainstPerGame)\n    const ppRank = parseInt(powerPlayPercentage)\n    const pkRank = parseInt(penaltyKillPercentage)\n    const faceOffRank = parseInt(faceOffWinPercentage)\n\n    const data = []\n    data.push({\n      x: 31 - goalsPerRank,\n      y: 'Goals For',\n      label: `${ goalsPerRank }${ getRankingsSuffix(goalsPerRank) }`\n    })\n    data.push({\n      x: 31 - goalsAgainstRank,\n      y: 'Goals Against',\n      label: `${ goalsAgainstRank }${ getRankingsSuffix(goalsAgainstRank) }`\n    })\n    data.push({\n      x: 31 - ppRank,\n      y: 'Power Play',\n      label: `${ ppRank }${ getRankingsSuffix(ppRank) }`\n    })\n    data.push({\n      x: 31 - pkRank,\n      y: 'Penalty Kill',\n      label: `${ pkRank }${ getRankingsSuffix(pkRank) }`\n    })\n    data.push({\n      x: 31 - faceOffRank,\n      y: 'Face Off %',\n      label: `${ faceOffRank }${ getRankingsSuffix(faceOffRank) }`\n    })\n\n    return data\n  }\n\n  renderRankingsChart = () => {\n    const { teamStats, colors } = this.props\n\n    return (\n      <RankingsChart\n        data={ this.getRankingsData(teamStats) }\n        colors={ colors }/>\n    )\n  }\n\n  renderTeamStats = () => {\n    const { selectedTeam } = this.props\n\n    if (!selectedTeam) {\n      return (\n      <div className='no-team-selected-panel'>.</div>\n      )\n    }\n\n    return (\n      <div>\n        <div className='stat-container split-view-stats'>\n          <div className='split-view-stat'>\n            <div className='stat-header'><h5>Points</h5></div>\n            <div className='record-text'>\n              { this.renderTeamPoints() }\n            </div>\n          </div>\n          <div className='split-view-stat'>\n            <div className='stat-header'><h5>Record</h5></div>\n            <div className='record-text'>\n              { this.renderTeamRecord() }\n            </div>\n          </div>\n        </div>\n        <div className='stat-container'>\n            <h5>Rankings</h5>\n            { this.renderRankingsChart() }\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { panel, selectTeam, selectedTeam } = this.props\n    return (\n      <div className='team-container'\n        style={{ justifyContent: panel === 1 ? 'flex-end' : 'flex-start' }}>\n        <div className='team-content-container'>\n          <div className='team-header'>\n            <h3>{ this.getTeamTitle() }</h3>\n            <TeamSelectDropdown\n                panel={ panel }\n                selectedTeam={ selectedTeam }\n                selectTeam={ selectTeam } />\n          </div>\n          { this.renderTeamStats() }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TeamPanel","import React, { Component } from 'react';\nimport '../App.css';\n\nimport {\n  FlexibleWidthXYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  LineMarkSeries,\n  Hint\n} from 'react-vis'\n\nclass TrendComparisonChart extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { tooltipValue: false }\n  }\n\n  formatData = () => {\n    const { statKey, teamPanel1Data, teamPanel2Data } = this.props\n    const dataTeamOne = teamPanel1Data.lastFive.map((game, index) => ({\n      x: index + 1,\n      y: game[statKey]\n    }))\n\n    const dataTeamTwo = teamPanel2Data.lastFive.map((game, index) => ({\n      x: index + 1,\n      y: game[statKey]\n    }))\n\n    return { dataTeamOne, dataTeamTwo }\n  }\n\n  getUpperBound = (data) => data\n    .reduce((maxValue, game) => Math.max(game.y, maxValue), 0)\n\n  renderHint = () => {\n    const { name } = this.props\n    const { tooltipValue } = this.state\n\n    return tooltipValue &&\n      <Hint value={ tooltipValue }>\n        <div className='radial-chart-tooltip'>\n          <div className='radial-chart-tooltip-name'>{ name }</div>\n          <div className='radial-chart-tooltip-value'>{ tooltipValue.y }</div>\n        </div>\n      </Hint>\n  }\n\n  renderLineMarkSeries = (data, color) => (\n    <LineMarkSeries\n      className=\"linemark-series-example\" \n      style={{ strokeWidth: '3px' }}\n      lineStyle={{ stroke: color }}\n      markStyle={{ stroke: color, fill: color }}\n      onValueMouseOver={ v => this.setState({ tooltipValue: v })}\n      onSeriesMouseOut={ () => this.setState({ tooltipValue: false })}\n      data={ data }\n    />\n  )\n\n  render() {\n    const { name, teamColors } = this.props\n    const { teamOneColor, teamTwoColor } = teamColors\n    const { dataTeamOne, dataTeamTwo } = this.formatData()\n    const maxValue = this.getUpperBound([...dataTeamOne, ...dataTeamTwo])\n\n    return (\n      <div className='comparison-stat-container'>\n        <h5>{ name }</h5>\n        <FlexibleWidthXYPlot\n          yDomain={ [0, maxValue + 5] }\n          height={300}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          { this.renderLineMarkSeries(dataTeamOne, teamOneColor) }\n          { this.renderLineMarkSeries(dataTeamTwo, teamTwoColor) }\n          { this.renderHint() }\n        </FlexibleWidthXYPlot>\n      </div>\n    )\n  }\n}\n\nexport default TrendComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass ShotComparisonChart extends Component {\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Shots' }\n        statKey={ 'shots' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default ShotComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass HitComparisonChart extends Component {\n\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Hits' }\n        statKey={ 'hits' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default HitComparisonChart","import React, { Component } from 'react';\nimport '../App.css';\nimport TrendComparisonChart from './trendComparisonChart';\n\nclass TakeawayComparisonChart extends Component {\n  render() {\n    const { teamPanel1Data, teamPanel2Data } = this.props\n    const teamOneColor = teamPanel1Data.colors.primaryColor\n    const teamTwoColor = teamPanel2Data.colors.primaryColor\n\n    return (\n      <TrendComparisonChart\n        name={ 'Takeaways' }\n        statKey={ 'takeaways' }\n        teamPanel1Data={ teamPanel1Data }\n        teamPanel2Data={ teamPanel2Data }\n        teamColors={ { teamOneColor, teamTwoColor } }/>\n    )\n  }\n}\n\nexport default TakeawayComparisonChart","import teams from '../constants/teams'\n\nexport const getTeamColors = (teamKey) => {\n  const colors = {\n    primaryColor: '#000',\n    secondaryColor: '#000',\n    tertiaryColor: '#000',\n    fourthColor: '#000'\n  }\n\n  if (teamKey) {\n    colors.primaryColor = teams[teamKey].primaryColor\n    colors.secondaryColor = teams[teamKey].secondaryColor || '#000'\n    colors.tertiaryColor = teams[teamKey].thirdColor || '#000'\n  }\n\n  return colors\n}","import moment from 'moment'\nconst axios = require('axios')\n\nexport const fetchTeamStats = async (teamId) => {\n  const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n  return response.data.teams[0].teamStats[0].splits\n}\n\nexport const fetchPreviousFiveGames = async (teamId) => {\n  const endDate = moment().subtract(1, 'days').format('YYYY-MM-DD')\n  const startDate = moment().subtract(1, 'months').format('YYYY-MM-DD')\n  const previousGamesUrl = `https://statsapi.web.nhl.com/api/v1/schedule?teamId=${teamId}&startDate=${startDate}&endDate=${endDate}`\n  const schedule  = await axios.get(previousGamesUrl)\n  const lastFiveGameIds = schedule.data.dates.slice(-5).map(game => game.games[0].gamePk)\n  const gameDataPromises = lastFiveGameIds.map(gameId => axios.get(`https://statsapi.web.nhl.com/api/v1/game/${gameId}/boxscore`))\n  const lastFiveGames = await Promise.all(gameDataPromises)\n  return lastFiveGames.map(gameData => {\n    const teams = gameData.data.teams\n    if (teams.away.team.id === teamId) {\n      return teams.away.teamStats.teamSkaterStats\n    }\n    return teams.home.teamStats.teamSkaterStats\n  })\n}","import React, { Component } from 'react'\nimport './App.css'\nimport TeamPanel from './teamPanel'\nimport ShotComparisonChart from './charts/lineComparisonChart'\nimport HitComparisonChart from './charts/hitComparisonChart'\nimport TakeawayComparisonChart from './charts/takeawayComparisonChart'\nimport teams from './constants/teams'\nimport { getTeamColors } from './utils/colorUtil'\nimport { fetchPreviousFiveGames } from './utils/apiUtil'\n\nconst axios = require('axios')\nconst queryString = require('query-string');\nconst Spinner = require('react-spinkit');\n\nclass ComparisonDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      teamPanel1Data: {},\n      teamPanel2Data: {},\n      isLoading: false\n    }\n  }\n\n  async componentDidMount() {\n    const { location } = this.props\n    const parsedSearch = queryString.parse(location.search)\n    this.selectTeamsFromSearch(parsedSearch)\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { location } = this.props\n    if (location.search !== prevProps.location.search) {\n      const parsedSearch = queryString.parse(location.search)\n      await this.selectTeamsFromSearch(parsedSearch)\n    }\n  }\n\n  selectTeamsFromSearch = async (parsedSearch) => {\n    const searchKeys = Object.keys(parsedSearch)\n    const teamKeys = Object.keys(teams)\n    const selectTeamPromises = []\n\n    if (searchKeys.includes('team1') || searchKeys.includes('team2')) {\n      this.setState({ isLoading: true })\n    }\n\n    if (searchKeys.includes('team1') && teamKeys.includes(parsedSearch.team1)) {\n      selectTeamPromises.push(this.selectTeam(parsedSearch.team1, 1))\n    }\n    if (searchKeys.includes('team2') && teamKeys.includes(parsedSearch.team2)) {\n      selectTeamPromises.push(this.selectTeam(parsedSearch.team2, 2))\n    }\n\n    await Promise.all(selectTeamPromises)\n    this.setState({ isLoading: false })\n  }\n\n  selectTeam = async (teamKey, panelNumber) => {\n    try {\n      const teamId = teams[teamKey].id\n      const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n      const stats = response.data.teams[0].teamStats[0].splits\n      const lastFive = await fetchPreviousFiveGames(teamId)\n      this.setState({\n        [`teamPanel${panelNumber}Data`]: {\n          selectedTeam: teamKey,\n          colors: getTeamColors(teamKey),\n          teamStats: {\n            stats: stats[0],\n            rankings: stats[1]\n          },\n          lastFive\n        } \n      })\n    } catch (error) {\n      this.setState({\n        [`teamPanel${panelNumber}Data`]: {\n          selectedTeam: null,\n          colors: {},\n          teamStats: null,\n          lastFive: []\n        } \n      })\n    }\n  }\n\n  renderChartsAndTrends = () => {\n    const { teamPanel1Data, teamPanel2Data } = this.state\n    return (\n      <div className='charts-and-trends-container'>\n        <ShotComparisonChart\n          teamPanel1Data={ teamPanel1Data }\n          teamPanel2Data={ teamPanel2Data } />\n        <HitComparisonChart\n          teamPanel1Data={ teamPanel1Data }\n          teamPanel2Data={ teamPanel2Data } />\n        <TakeawayComparisonChart\n          teamPanel1Data={ teamPanel1Data }\n          teamPanel2Data={ teamPanel2Data } />\n      </div>\n    )\n  }\n\n  renderWelcomeHeader = () => (\n    <div className='welcome-header-container'>\n      <div className='welcome-header'>\n        <h1>HOCKEY DASHBOARDS</h1>\n        <p>Choose two teams to see how they compare. Show that your team is going to win!</p>\n      </div>\n    </div>\n  )\n\n  renderLoadingHeader = () => (\n    <div className='welcome-header-container'>\n      <div className='welcome-header'>\n        <h1>Loading ...</h1>\n        <Spinner\n          name='line-scale-pulse-out'\n          fadeIn='none' />\n      </div>\n    </div>\n  )\n\n  render() {\n    const { isLoading, teamPanel1Data, teamPanel2Data } = this.state\n    const backgroundImagePath = 'https://samirjoshi.github.io/hockey-dashboard/background2.jpg'\n\n    return (\n      <div className=\"App\" style={{\n        marginBottom: 0,\n        backgroundImage: `url(${backgroundImagePath})`,\n        backgroundSize: 'cover'\n      }} >\n        { !isLoading && !(teamPanel1Data.selectedTeam || teamPanel2Data.selectedTeam) &&\n          this.renderWelcomeHeader()\n        }\n        {\n          isLoading &&\n          this.renderLoadingHeader()\n        }\n        <div className='team-comparison'>\n          <TeamPanel\n            panel={ 1 }\n            selectTeam={ this.selectTeam }\n            selectedTeam={ teamPanel1Data.selectedTeam }\n            colors={ teamPanel1Data.colors }\n            lastFive={ teamPanel1Data.lastFive }\n            teamStats={ teamPanel1Data.teamStats }/>\n          <TeamPanel\n            panel={ 2 }\n            selectTeam={ this.selectTeam }\n            selectedTeam={ teamPanel2Data.selectedTeam }\n            colors={ teamPanel2Data.colors }\n            lastFive={ teamPanel2Data.lastFive }\n            teamStats={ teamPanel2Data.teamStats }/>\n        </div>\n        { !!(teamPanel1Data.selectedTeam && teamPanel2Data.selectedTeam) &&\n          this.renderChartsAndTrends()\n        }\n      </div>  \n    )\n  }\n}\n\nexport default ComparisonDashboard\n","import React, { Component } from 'react'\nimport './teamDashboard.css'\nimport teams from './constants/teams'\nimport { getTeamColors } from './utils/colorUtil'\nimport { fetchPreviousFiveGames } from './utils/apiUtil'\nimport TrendComparisonChart from './charts/trendComparisonChart';\n\nconst axios = require('axios')\nconst queryString = require('query-string');\nconst Spinner = require('react-spinkit');\n\nclass TeamDashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      teamData: null,\n      isLoading: false\n    }\n  }\n\n  async componentDidMount() {\n    const { location } = this.props\n    const parsedSearch = queryString.parse(location.search)\n    this.selectTeamFromSearch(parsedSearch)\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { location } = this.props\n    if (location.search !== prevProps.location.search) {\n      const parsedSearch = queryString.parse(location.search)\n      await this.selectTeamFromSearch(parsedSearch)\n    }\n  }\n\n  selectTeamFromSearch = async (parsedSearch) => {\n    const searchKeys = Object.keys(parsedSearch)\n    const teamKeys = Object.keys(teams)\n\n    if (searchKeys.includes('team')){\n      this.setState({ isLoading: true })\n      if (teamKeys.includes(parsedSearch.team)) {\n        await this.selectTeam(parsedSearch.team)\n      }\n    }\n\n    this.setState({ isLoading: false })\n  }\n\n  selectTeam = async (teamKey) => {\n    try {\n      const teamId = teams[teamKey].id\n      const response = await axios.get(`https://statsapi.web.nhl.com/api/v1/teams/${teamId}?expand=team.stats`)\n      const teamResponse = response.data.teams[0]\n      const stats = teamResponse.teamStats[0].splits\n      const lastFive = await fetchPreviousFiveGames(teamId)\n      this.setState({\n        teamData: {\n          selectedTeam: teamKey,\n          colors: getTeamColors(teamKey),\n          teamStats: {\n            stats: stats[0],\n            rankings: stats[1]\n          },\n          venue: teamResponse.venue.name,\n          city: teamResponse.venue.city,\n          division: teamResponse.division.name,\n          conference: teamResponse.conference.name,\n          firstYear: teamResponse.firstYearOfPlay,\n          lastFive\n        } \n      })\n    } catch (error) {\n      this.setState({ teamData: { selectedTeam: null } })\n    }\n  }\n\n  renderLoadingHeader = () => (\n    <div className='welcome-header-container'>\n      <div className='welcome-header'>\n        <h1>Loading ...</h1>\n        <Spinner\n          name='line-scale-pulse-out'\n          fadeIn='none' />\n      </div>\n    </div>\n  )\n\n  generateBlurb = () => {\n    const { selectedTeam, city, venue, firstYear } = this.state.teamData\n    const name = teams[selectedTeam].name\n\n    let blurb = `The ${name} have been playing since ${firstYear}. `\n    blurb += `They are located in ${city} and currently play in ${venue}.`\n\n    return blurb\n  }\n\n  renderTeamHeader = () => {\n    const { selectedTeam, division, conference } = this.state.teamData\n    return (\n      <div\n        className='team-info-pane-container'\n        style={{ backgroundColor: teams[selectedTeam].primaryColor }}>\n        <div className='team-info-pane'>\n          <div className='team-title'>\n            { teams[selectedTeam].name }\n          </div>\n          <div className='team-info-component'>\n            { this.generateBlurb() }\n          </div>\n          <div className='team-info-component'>\n            Division: { division }\n          </div>\n          <div className='team-info-component'>\n            Conference: { conference }\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderComparisonStat = (name, statKey) => {\n    const { teamData } = this.state\n    const teamColors = {\n      teamOneColor: teamData.colors.primaryColor,\n      teamTwoColor: '#000000'\n    }\n\n    return (\n      <div className='comparison-chart-container'>\n        <TrendComparisonChart\n          name={ name }\n          statKey={ statKey}\n          teamPanel1Data={ teamData }\n          teamPanel2Data={ { lastFive: [] } }\n          teamColors={ teamColors }/>\n      </div>\n    )\n  }\n\n  renderTeamDashboard = () => (\n    <div className='team-dashboard'>\n      { this.renderTeamHeader() }\n      { this.renderComparisonStat('Goals', 'goals') }\n      { this.renderComparisonStat('Shots', 'shots') }\n      { this.renderComparisonStat('Hits', 'hits') }\n      { this.renderComparisonStat('Takeaways', 'takeaways') }\n    </div>\n  )\n\n  render() {\n    const { isLoading, teamData } = this.state\n    console.log(isLoading)\n    console.log(this.state)\n    const backgroundImagePath = 'https://samirjoshi.github.io/hockey-dashboard/background2.jpg'\n\n    return (\n      <div className=\"App\" style={{\n        marginBottom: 0,\n        backgroundImage: `url(${backgroundImagePath})`,\n        backgroundSize: 'cover'\n      }} >\n        { isLoading &&\n          this.renderLoadingHeader()\n        }\n        {\n          !!(teamData && teamData.selectedTeam) &&\n          this.renderTeamDashboard()\n        }\n      </div>  \n    )\n  }\n}\n\nexport default TeamDashboard\n","import React, { Component } from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom'\nimport ComparisonDashboard from './comparisonDashboard'\nimport TeamDashboard from './teamDashboard'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route path='/comparisons' component={ ComparisonDashboard } />\n            <Route path='/team' component={ TeamDashboard } />\n            <Redirect from='/' to='/comparisons' />\n          </Switch>\n        </Router>\n        <div className='credits-and-info-container'>\n          Credits to the NHL and their stats API for the data used to construct the dashboards. Made with <span role='img' aria-label='shark'>🦈</span> by it me sj.\n        </div>  \n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/react-vis/dist/style.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}