{"version":3,"sources":["constants/teams.ts","utils/teamMapUtils.ts","Comparison/TeamPanel.tsx","Comparison/ComparisonContainer.tsx","Comparison/ComparisonPage.tsx","Team/TeamContainer.tsx","Team/TeamPage.tsx","Ranking/RankingPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["teamMap","getPrimaryColor","teamId","team","Object","values","find","id","toString","primaryColor","getSecondaryColor","secondaryColor","getTertiaryColor","thirdColor","getTeamName","name","TeamPanel","teamData","onChange","renderLabel","entry","value","rankingChartData","rankings","goalsFor","goalsAgainst","powerPlay","penaltyKill","faceoffPerc","Grid","Column","className","Dropdown","placeholder","selection","options","generateOptions","_","Divider","clearing","points","width","height","data","record","wins","fill","losses","otl","dataKey","nameKey","cx","cy","innerRadius","outerRadius","label","layout","type","domain","tickFormatter","val","rank","includes","remainder","getRankingsSuffix","ComparisonContainer","teamId1","teamId2","useState","isLoading","setIsLoading","teamData1","setTeamData1","teamData2","setTeamData2","useEffect","a","axios","get","params","team1","team2","fetchData","onChangeTeam1","onChangeTeam2","Segment","loading","stackable","columns","relaxed","vertical","map","text","key","sort","ComparisonPage","dropdownValue1","setDropdownValue1","dropdownValue2","setDropdownValue2","showComparison","setShowComparison","Transition","animation","duration","Button","primary","onClick","disabled","TeamContainer","setTeamData","style","backgroundColor","Header","as","color","blurb","info","firstYearOfPlay","city","venue","generateBlurb","division","conference","CardGroup","Card","CardContent","CardHeader","TeamPage","dropdownValue","setDropdownValue","showTeamData","setShowTeamData","RankingPage","rankedTeams","setRankedTeams","ranking","fetchRanking","Loader","active","List","divided","index","ListItem","getTeamNameById","App","showBurgerMenu","setShowBurgerMenu","basename","role","aria-label","aria-expanded","aria-hidden","to","activeClassName","path","component","from","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.31cc684f.chunk.js","sourcesContent":["export const teamMap = {\n    \"NJD\": {\n        \"id\": 1,\n        \"abbev\": \"NJD\",\n        \"name\": \"New Jersey Devils\",\n        \"primaryColor\": \"#CE1126\",\n        \"secondaryColor\": \"#EEEEEE\",\n        \"thirdColor\": \"#000000\"\n    },\n    \"NYI\": {\n        \"id\": 2,\n        \"name\": \"New York Islanders\",\n        \"primaryColor\": \"#00539b\",\n        \"secondaryColor\": \"#F47d30\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"NYR\": {\n        \"id\": 3,\n        \"name\": \"New York Rangers\",\n        \"primaryColor\": \"#0038A8\",\n        \"secondaryColor\": \"#CE1126\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"PHI\": {\n        \"id\": 4,\n        \"name\": \"Philadelphia Flyers\",\n        \"primaryColor\": \"#F74902\",\n        \"secondaryColor\": \"#000000\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"PIT\": {\n        \"id\": 5,\n        \"name\": \"Pittsburgh Penguins\",\n        \"primaryColor\": \"#000000\",\n        \"secondaryColor\": \"#CFC493\",\n        \"thirdColor\": \"#FCB514\"\n    },\n    \"BOS\": {\n        \"id\": 6,\n        \"name\": \"Boston Bruins\",\n        \"primaryColor\": \"#FFB81C\",\n        \"secondaryColor\": \"#000000\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"BUF\": {\n        \"id\": 7,\n        \"name\": \"Buffalo Sabres\",\n        \"primaryColor\": \"#002654\",\n        \"secondaryColor\": \"#FCB514\",\n        \"thirdColor\": \"#ADAFAA\"\n    },\n    \"MTL\": {\n        \"id\": 8,\n        \"name\": \"Montreal Canadiens\",\n        \"primaryColor\": \"#AF1E2D\",\n        \"secondaryColor\": \"#192168\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"OTT\": {\n        \"id\": 9,\n        \"name\": \"Ottawa Senators\",\n        \"primaryColor\": \"#E31837\",\n        \"secondaryColor\": \"#C69214\",\n        \"thirdColor\": \"#000000\"\n    },\n    \"TOR\": {\n        \"id\": 10,\n        \"name\": \"Toronto Maple Leafs\",\n        \"primaryColor\": \"#003E7E\",\n        \"secondaryColor\": \"#EEEEEE\",\n        \"thirdColor\": \"#000000\"\n    },\n    \"CAR\": {\n        \"name\": \"Carolina Hurricanes\",\n        \"id\": 12,\n        \"primaryColor\": \"#CC0000\",\n        \"secondaryColor\": \"#000000\",\n        \"thirdColor\": \"#A2AAAD\"\n    },\n    \"FLA\": {\n        \"id\": 13,\n        \"name\": \"Florida Panthers\",\n        \"primaryColor\": \"#041E42\",\n        \"secondaryColor\": \"#C8102E\",\n        \"thirdColor\": \"#B9975B\"\n    },\n    \"TBL\": {\n        \"name\": \"Tampa Bay Lightning\",\n        \"id\": 14,\n        \"primaryColor\": \"#002868\",\n        \"secondaryColor\": \"#EEEEEE\",\n        \"thirdColor\": \"#000000\"\n    },\n    \"WSH\": {\n        \"id\": 15,\n        \"name\": \"Washington Capitals\",\n        \"primaryColor\": \"#041E42\",\n        \"secondaryColor\": \"#C8102E\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"CHI\": {\n        \"id\": 16,\n        \"name\": \"Chicago Blackhawks\",\n        \"primaryColor\": \"#CF0A2C\",\n        \"secondaryColor\": \"#FFD100\",\n        \"thirdColor\": \"#000000\"\n    },\n    \"DET\": {\n        \"id\": 17,\n        \"name\": \"Detroit Red Wings\",\n        \"primaryColor\": \"#CE1126\",\n        \"secondaryColor\": \"#EEEEEE\",\n        \"thirdColor\": \"#000000\"\n    },\n    \"NSH\": {\n        \"id\": 18,\n        \"name\": \"Nashville Predators\",\n        \"primaryColor\": \"#FFB81C\",\n        \"secondaryColor\": \"#041E42\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"STL\": {\n        \"id\": 19,\n        \"name\": \"St. Louis Blues\",\n        \"primaryColor\": \"#002F87\",\n        \"secondaryColor\": \"#FCB514\",\n        \"thirdColor\": \"#041E42\"\n    },\n    \"CGY\": {\n        \"id\": 20,\n        \"name\": \"Calgary Flames\",\n        \"primaryColor\": \"#C8102E\",\n        \"secondaryColor\": \"#F1BE48\",\n        \"thirdColor\": \"#111111\"\n    },\n    \"COL\": {\n        \"id\": 21,\n        \"name\": \"Colorado Avalanche\",\n        \"primaryColor\": \"#6F263D\",\n        \"secondaryColor\": \"#236192\",\n        \"thirdColor\": \"#A2AAAD\"\n    },\n    \"EDM\": {\n        \"id\": 22,\n        \"name\": \"Edmonton Oilers\",\n        \"primaryColor\": \"#041E42\",\n        \"secondaryColor\": \"#FF4C00\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"VAN\": {\n        \"id\": 23,\n        \"name\": \"Vancouver Canucks\",\n        \"primaryColor\": \"#001F5B\",\n        \"secondaryColor\": \"#00843D\",\n        \"thirdColor\": \"#071C2C\"\n    },\n    \"ANA\": {\n        \"id\": 24,\n        \"name\": \"Anaheim Ducks\",\n        \"primaryColor\": \"#F47A38\",\n        \"secondaryColor\": \"#B09862\",\n        \"thirdColor\": \"#C4CED4\",\n        \"fourthColor\": \"#010101\"\n    },\n    \"DAL\": {\n        \"id\": 25,\n        \"name\": \"Dallas Stars\",\n        \"primaryColor\": \"#006847\",\n        \"secondaryColor\": \"#8F8F8C\",\n        \"thirdColor\": \"#111111\"\n    },\n    \"LAK\": {\n        \"id\": 26,\n        \"name\": \"Los Angeles Kings\",\n        \"primaryColor\": \"#111111\",\n        \"secondaryColor\": \"#A2AAAD\",\n        \"thirdColor\": \"#EEEEEE\"\n    },\n    \"SJS\": {\n        \"id\": 28,\n        \"name\": \"San Jose Sharks\",\n        \"primaryColor\": \"#006D75\",\n        \"secondaryColor\": \"#EA7200\",\n        \"thirdColor\": \"#000000\",\n        \"fourthColor\": \"#EEEEEE\"\n    },\n    \"CBJ\": {\n        \"id\": 29,\n        \"name\": \"Columbus Blue Jackets\",\n        \"primaryColor\": \"#002654\",\n        \"secondaryColor\": \"#CE1126\",\n        \"thirdColor\": \"#A4A9AD\"\n    },\n    \"MIN\": {\n        \"id\": 30,\n        \"name\": \"Minnesota Wild\",\n        \"primaryColor\": \"#A6192E\",\n        \"secondaryColor\": \"#154734\",\n        \"thirdColor\": \"#DDCBA4\"\n    },\n    \"WPG\": {\n        \"id\": 52,\n        \"name\": \"Winnipeg Jets\",\n        \"primaryColor\": \"#041E42\",\n        \"secondaryColor\": \"#AC162C\",\n        \"thirdColor\": \"#7B303E\",\n        \"fourthColor\": \"#55565A\"\n    },\n    \"ARI\": {\n        \"id\": 53,\n        \"name\": \"Arizona Coyotes\",\n        \"primaryColor\": \"#8C2633\",\n        \"secondaryColor\": \"#e2d6b5\",\n        \"thirdColor\": \"#111111\"\n    },\n    \"VGK\": {\n        \"id\": 54,\n        \"name\": \"Vegas Golden Knights\",\n        \"primaryColor\": \"#B4975A\",\n        \"secondaryColor\": \"#333f42\",\n        \"thirdColor\": \"#c8102E\",\n        \"fourthColor\": \"#000000\"\n    }\n}","import { teamMap } from '../constants/teams'\n\nexport const getPrimaryColor = (teamId: string): string => {\n    const team = Object.values(teamMap).find(team => team.id.toString() === teamId.toString())\n    if (!team) {\n        return \"#000000\"\n    }\n    return team.primaryColor\n}\n\nexport const getSecondaryColor = (teamId: string): string => {\n    const team = Object.values(teamMap).find(team => team.id.toString() === teamId.toString())\n    if (!team) {\n        return \"#000000\"\n    }\n    return team.secondaryColor\n}\n\nexport const getTertiaryColor = (teamId: string): string => {\n    const team = Object.values(teamMap).find(team => team.id.toString() === teamId.toString())\n    if (!team) {\n        return \"#000000\"\n    }\n    return team.thirdColor\n}\n\nexport const getTeamName = (teamId: string): string => {\n    const team = Object.values(teamMap).find(team => team.id.toString() === teamId.toString())\n    if (!team) {\n        return \"\"\n    }\n    return team.name\n}\n","import React, { FC } from 'react'\nimport { Dropdown, Grid, Divider } from \"semantic-ui-react\"\nimport { PieChart, Pie, ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar } from \"recharts\"\n\nimport { generateOptions } from \"./ComparisonPage\"\nimport { getPrimaryColor, getSecondaryColor, getTertiaryColor, getTeamName } from \"../utils/teamMapUtils\"\nimport { TeamData } from '../types/TeamData'\n\ninterface TeamPanelProps {\n  teamData: TeamData,\n  onChange: Function\n}\n\nexport const TeamPanel: FC<TeamPanelProps> = ({ teamData, onChange }) => {\n  const renderTeamPoints = () => (\n    <div className='points-text'>\n      { `${teamData.points} pts`}\n    </div>\n  )\n\n  const renderLabel = (entry: any) => {\n    return `${entry.name}: ${entry.value}`\n  }\n\n  const renderTeamRecord = () => (\n    <div className=\"team-record\">\n      <ResponsiveContainer width=\"100%\" height={ 250 }>\n        <PieChart>\n          <Pie\n            data={[\n              { name: 'Wins', value: teamData.record.wins, fill: getPrimaryColor(teamData.id) },\n              { name: 'Losses', value: teamData.record.losses, fill: getSecondaryColor(teamData.id) },\n              { name: 'OT Losses', value: teamData.record.otl, fill: getTertiaryColor(teamData.id) }\n            ]}\n            dataKey=\"value\"\n            nameKey=\"name\"\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={55}\n            outerRadius={80}\n            label={ renderLabel }\n          />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  )\n\n  const rankingChartData = [\n  {\n    \"name\": \"Goals For\",\n    \"value\": 32 - teamData.rankings.goalsFor\n  },\n  {\n    \"name\": \"Goals Against\",\n    \"value\": 32 - teamData.rankings.goalsAgainst\n  },\n  {\n    \"name\": \"Power Play\",\n    \"value\": 32 - teamData.rankings.powerPlay\n  },\n  {\n    \"name\": \"Penalty Kill\",\n    \"value\": 32 - teamData.rankings.penaltyKill\n  },\n  {\n    \"name\": \"Faceoff %\",\n    \"value\": 32 - teamData.rankings.faceoffPerc\n  }\n]\n\n  const getRankingsSuffix = (rank: number) => {\n    if ([11, 12, 13].includes(rank)) {\n      return 'th'\n    } \n    \n    const remainder = rank % 10\n    if (remainder === 1) {\n      return 'st'\n    } else if (remainder === 2) {\n      return 'nd'\n    } else if (remainder === 3) {\n      return 'rd'\n    } else {\n      return 'th'\n    }\n  }\n\n  const renderRankingsChart = (data: any[]) => (\n    <ResponsiveContainer width=\"100%\" height={ 250 }>\n      <BarChart data={rankingChartData} layout=\"vertical\">\n        <CartesianGrid />\n        <XAxis\n          type=\"number\"\n          domain={ [1, 31] }\n          tickFormatter={ (val) => `${32 - val}${getRankingsSuffix(32 - val)}` }\n        />\n        <YAxis type=\"category\" dataKey=\"name\" />\n        <Tooltip />\n        <Bar dataKey=\"value\" fill={ getPrimaryColor(teamData.id) } />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n\n  return (\n    <Grid.Column className='team-panel-column'>\n      <div className=\"team-panel\">\n        <div className='header'>\n          <div className='header-text'>\n            { getTeamName(teamData.id) }\n          </div>\n          <Dropdown\n            className=\"select-team-action\"\n            placeholder=\"Change team\"\n            selection\n            options={ generateOptions() } \n            onChange={ (_, { value }) => onChange(value as string) }\n          />\n        </div>\n        <Divider clearing />\n        <div className='stats-container'>\n          { renderTeamPoints() }\n          { renderTeamRecord() }\n        </div>\n        <Divider clearing />\n        <div className='rankings-container'>\n          <div className='rankings-header'>\n            Rankings\n          </div>\n          { renderRankingsChart([\n            { name: 'Wins', value: 44, fill: '#006D75' },\n            { name: 'Losses', value: 14, fill: '#EA7200' },\n            { name: 'OT Losses', value: 12, fill: '#000000' }\n          ]) }\n        </div>\n      </div>\n    </Grid.Column>\n  )\n}","import React, { FC, useState, useEffect } from 'react'\nimport { Segment, Grid, Divider } from \"semantic-ui-react\"\nimport axios from \"axios\"\n\nimport { TeamPanel } from \"./TeamPanel\"\nimport { TeamData } from '../types/TeamData'\n\ninterface ComparisonContainerProps {\n  teamId1: string\n  teamId2: string\n}\n\nexport const ComparisonContainer: FC<ComparisonContainerProps> = ({ teamId1, teamId2 }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [teamData1, setTeamData1] = useState<TeamData | null>(null)\n  const [teamData2, setTeamData2] = useState<TeamData | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true)\n      const { data } = await axios.get<{ team1: TeamData, team2: TeamData }>(\"/comparison/team\", {\n        params: {\n          team1: teamId1,\n          team2: teamId2\n        }\n      })\n      setTeamData1(data.team1)\n      setTeamData2(data.team2)\n      setIsLoading(false)\n    }\n\n    fetchData()\n  }, [teamId1, teamId2])\n\n  const onChangeTeam1 = async (teamId: string) => {\n    const { data } = await axios.get<{ team1: TeamData }>(\"/comparison/team\", {\n      params: {\n        team1: teamId\n      }\n    })\n    setTeamData1(data.team1)\n  }\n\n  const onChangeTeam2 = async (teamId: string) => {\n    const { data } = await axios.get<{ team2: TeamData }>(\"/comparison/team\", {\n      params: {\n        team2: teamId\n      }\n    })\n    setTeamData2(data.team2)\n  }\n\n  return(\n    <Segment loading={ isLoading }>\n      {\n        (!isLoading && !!teamData1 && !!teamData2) &&\n        <Grid stackable columns={2} relaxed=\"very\">\n          <TeamPanel teamData={ teamData1 } onChange={ onChangeTeam1 }/>\n          <TeamPanel teamData={ teamData2 } onChange={ onChangeTeam2 }/>\n        </Grid>\n      }\n      <Divider vertical className=\"team-divider\">VS</Divider>\n    </Segment>\n  )\n}","import React, { FC, useState } from 'react'\nimport { Button, Dropdown, Transition } from \"semantic-ui-react\"\n\nimport { teamMap } from \"../constants/teams\"\nimport { ComparisonContainer } from './ComparisonContainer'\n\nexport const generateOptions = () => {\n  return Object.values(teamMap).map(value => ({\n    text: value.name,\n    key: value.id,\n    value: value.id\n  })).sort((team1, team2) => {\n    if (team1.text < team2.text) {\n      return -1\n    }\n    if (team1.text > team2.text) {\n      return 1\n    }\n\n    return 0\n  })\n\n}\n\nexport const ComparisonPage: FC = () => {\n  const [dropdownValue1, setDropdownValue1] = useState('')\n  const [dropdownValue2, setDropdownValue2] = useState('')\n  const [showComparison, setShowComparison] = useState(false)\n\n  const renderHomePage = () => (\n    <div className=\"comparison-page\">\n      <div className=\"comparison-page-home-content\">\n        <div className=\"header\">Compare Hockey Teams Head to Head</div>\n        <div className=\"sub-header\">Choose two teams to see how they compare</div>\n        <div className=\"action-container\">\n          <Dropdown\n            className=\"select-team-action\"\n            placeholder=\"Select a team\"\n            selection\n            options={ generateOptions() } \n            onChange={ (_, { value }) => setDropdownValue1(value as string) }\n          />\n          <Dropdown\n            placeholder=\"Select a team\"\n            className=\"select-team-action\"\n            selection\n            options={ generateOptions() } \n            onChange={ (_, { value }) => setDropdownValue2(value as string) }\n          />\n          <Button\n            primary\n            className=\"select-team-action\"\n            onClick={ () => { setShowComparison(true) } }\n            disabled={ !dropdownValue1 || !dropdownValue2 }\n          >\n            Compare\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  if (showComparison) {\n    return (\n      <Transition animation={ \"browse\" } duration={ 500 }>\n        <ComparisonContainer teamId1={dropdownValue1} teamId2={dropdownValue2} />\n      </Transition>\n    )\n  }\n\n  return (\n    <Transition animation={ \"browse\" } duration={ 500 }>\n      { renderHomePage() }\n    </Transition>\n  )\n}","import React, { FC, useState, useEffect } from 'react'\nimport { Segment, Header, Card, CardGroup, CardHeader, CardContent } from \"semantic-ui-react\"\nimport axios from \"axios\"\nimport './TeamPage.scss'\n\nimport { TeamData, LastFive } from '../types/TeamData'\nimport { getTeamName, getSecondaryColor, getPrimaryColor } from '../utils/teamMapUtils'\n\ninterface TeamContainerProps {\n  teamId: string\n}\n\nexport const TeamContainer: FC<TeamContainerProps> = ({ teamId }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [teamData, setTeamData] = useState<TeamData | null>(null)\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true)\n      const { data } = await axios.get<{ teamData: TeamData, lastFive: LastFive }>(\"/comparison/details\", {\n        params: { teamId }\n      })\n      setTeamData(data.teamData)\n\n      setIsLoading(false)\n    }\n\n    fetchData()\n  }, [teamId])\n\n  const generateBlurb = () => {\n    let blurb = `The ${getTeamName(teamId)} have been playing since ${teamData!.info.firstYearOfPlay}. `\n    blurb += `They are located in ${teamData!.info.city} and currently play in ${teamData!.info.venue}.`\n\n    return blurb\n  }\n\n  return(\n    <Segment loading={ isLoading } className=\"team-segment\">\n      {\n        (!isLoading && !!teamData) &&\n        <div>\n          <div className=\"header-container\" style={{ backgroundColor: getPrimaryColor(teamId) }}>\n            <Header as=\"h1\" style={{ backgroundColor: getPrimaryColor(teamId), color: getSecondaryColor(teamId) }}>\n              { getTeamName(teamId) }\n            </Header>\n            <div className=\"team-info-container\">\n              <div className='team-info-component'>\n                { generateBlurb() }\n              </div>\n              <div className='team-info-component'>\n                { `Division: ${ teamData.info.division }`}\n              </div>\n              <div className='team-info-component'>\n                { `Conference: ${ teamData.info.conference }`}\n              </div>\n            </div>\n          </div>\n          <CardGroup>\n            <Card>\n              <CardContent>\n                <CardHeader>Points</CardHeader>\n                <div className=\"text-card-content\">\n                  { `${ teamData.points } points` }\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <CardHeader>Record</CardHeader>\n                <div className=\"text-card-content\">\n                  { `${ teamData.record.wins } - ${teamData.record.losses} - ${teamData.record.otl}` }\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <CardHeader>Goals For Rank</CardHeader>\n                <div className=\"text-card-content\">\n                  { teamData.rankings.goalsFor }\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <CardHeader>Goals Against Rank</CardHeader>\n                <div className=\"text-card-content\">\n                  { teamData.rankings.goalsAgainst }\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <CardHeader>Power Play Rank</CardHeader>\n                <div className=\"text-card-content\">\n                  { teamData.rankings.powerPlay }\n                </div>\n              </CardContent>\n            </Card>\n          </CardGroup>\n        </div>\n      }\n    </Segment>\n  )\n}","import React, { FC, useState } from 'react'\nimport { Button, Dropdown, Segment } from \"semantic-ui-react\"\n\nimport { generateOptions } from '../Comparison/ComparisonPage'\nimport { TeamContainer } from './TeamContainer'\n\nexport const TeamPage: FC = () => {\n  const [dropdownValue, setDropdownValue] = useState('')\n  const [showTeamData, setShowTeamData] = useState(false)\n\n  if (showTeamData) {\n    return (\n      <TeamContainer teamId={ dropdownValue } />\n    )\n  }\n\n  return (\n    <Segment className=\"team-page\">\n      <div className=\"team-page-home-content\">\n        <div className=\"header\">\n          Select a team\n        </div>\n        <div className=\"action-container\">\n          <Dropdown\n            className=\"select-team-action\"\n            placeholder=\"Select a team\"\n            selection\n            options={ generateOptions() } \n            onChange={ (_, { value }) => setDropdownValue(value as string) }\n          />\n          <Button\n            primary\n            className=\"select-team-action\"\n            onClick={ () => { setShowTeamData(true) } }\n            disabled={ !dropdownValue }\n          >\n            Go\n          </Button>\n        </div>\n      </div>\n    </Segment>\n  )\n}","import React, { FC, useState, useEffect } from 'react'\nimport { Loader, List, ListItem } from \"semantic-ui-react\"\nimport axios from \"axios\"\n\nimport { teamMap } from '../constants/teams'\n\ninterface TeamWithRank {\n  id: string\n  rank: string\n  points: string\n}\n\nconst getTeamNameById = (id: string) => {\n  for (const team of Object.values(teamMap)) {\n    if (team.id.toString() === id) {\n      return team.name\n    }\n  }\n  return \"\"\n}\n\nexport const RankingPage: FC = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [rankedTeams, setRankedTeams] = useState<TeamWithRank[]>([])\n\n  useEffect(() => {\n    const fetchRanking = async () => {\n      setIsLoading(true)\n      const { data } = await axios.get<{ ranking: TeamWithRank[] }>(\"/rankings\")\n      setRankedTeams(data.ranking)\n      setIsLoading(false)\n    }\n\n    fetchRanking()\n  }, [])\n\n  const renderListItem = (team: TeamWithRank, index: number) => (\n    <ListItem key={ `team-${index}`}>\n      <div className=\"ranking-list-item\">\n        <div className=\"item-left\">\n          <div className=\"rank-display\">\n            { `#${team.rank}` }\n          </div>\n          <div className=\"team-display\">\n            <div>\n              { getTeamNameById(team.id) }\n            </div>\n          </div>\n        </div>\n        <div className=\"item-right\">\n          { `${team.points} pts` }\n        </div>\n      </div>\n    </ListItem>\n  )\n\n  if (isLoading) {\n    return (\n      <div className=\"ranking-page\">\n        <div className=\"ranking-header\">\n          Rankings\n        </div>\n          <Loader active />\n      </div>\n    )\n}\n\n  return (\n    <div className=\"ranking-page\">\n      <div className=\"ranking-header\">\n        Rankings\n      </div>\n      <List divided>\n        {\n          rankedTeams.map(renderListItem)\n        }\n      </List>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Route, Redirect, Switch, NavLink } from 'react-router-dom'\n\nimport { ComparisonPage } from './Comparison/ComparisonPage'\nimport { TeamPage } from './Team/TeamPage'\nimport { RankingPage } from './Ranking/RankingPage'\n\nfunction App() {\n  const [showBurgerMenu, setShowBurgerMenu] = useState()\n  return (\n    <section className=\"hero is-fullheight has-background-white-ter\">\n      <Router basename='/hockey-dashboard'>\n        <div className=\"hero-head\">\n          <div className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n              <div\n                role=\"button\"\n                className=\"navbar-burger burger\"\n                aria-label=\"menu\"\n                aria-expanded=\"false\"\n                onClick={ () => { setShowBurgerMenu(!showBurgerMenu) }}\n              >\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n              </div>\n            </div>\n            <div className={ `navbar-menu ${ showBurgerMenu ?  \"is-active\" : \"\" } ` }>\n              <div className=\"navbar-start\">\n                <NavLink\n                  to=\"/comparison\"\n                  className=\"navbar-item\"\n                  activeClassName=\"has-text-black has-text-weight-medium\"\n                  onClick={ () => { setShowBurgerMenu(false) } }\n                >\n                  Head to Head\n                </NavLink>\n                <NavLink\n                  to=\"/teams\"\n                  className=\"navbar-item\"\n                  activeClassName=\"has-text-black has-text-weight-medium\"\n                  onClick={ () => { setShowBurgerMenu(false) } }\n                >\n                  Teams\n                </NavLink>\n                <NavLink\n                  to=\"/rankings\"\n                  className=\"navbar-item\"\n                  activeClassName=\"has-text-black has-text-weight-medium\"\n                >\n                  Rankings\n                </NavLink>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hero-body\">\n            <Switch>\n              <Route path='/comparison' component={ ComparisonPage } />\n              <Route path='/teams' component={ TeamPage } />\n              <Route path='/rankings' component={ RankingPage } />\n              <Redirect from='/' to='/comparison' />\n            </Switch>\n        </div>\n        <div className=\"hero-foot has-text-dark has-text-centered\">\n          <div>\n            Credits to the NHL and their stats API for the data used to construct the dashboards. <br />\n            Credits to <a href='https://teamcolorcodes.com/nhl-team-color-codes/'>Team Color Codes</a> for collecting the team colors that were used on this site. <br />\n            See the full project on <a href='https://github.com/SamirJoshi/hockey-dashboard'>Github</a>\n          </div>\n        </div>\n      </Router>\n    </section>\n  )\n}\n  \n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}